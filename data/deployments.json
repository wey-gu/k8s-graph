{
    "apiVersion": "v1",
    "items": [
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"cert-manager\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"cert-manager\",\"app.kubernetes.io/name\":\"cert-manager\"},\"name\":\"cert-manager\",\"namespace\":\"cert-manager\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"cert-manager\",\"app.kubernetes.io/name\":\"cert-manager\"}},\"template\":{\"metadata\":{\"annotations\":{\"prometheus.io/path\":\"/metrics\",\"prometheus.io/port\":\"9402\",\"prometheus.io/scrape\":\"true\"},\"labels\":{\"app\":\"cert-manager\",\"app.kubernetes.io/component\":\"controller\",\"app.kubernetes.io/instance\":\"cert-manager\",\"app.kubernetes.io/name\":\"cert-manager\"}},\"spec\":{\"containers\":[{\"args\":[\"--v=2\",\"--cluster-resource-namespace=$(POD_NAMESPACE)\",\"--leader-election-namespace=kube-system\"],\"env\":[{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"quay.io/jetstack/cert-manager-controller:v1.3.1\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"cert-manager\",\"ports\":[{\"containerPort\":9402,\"protocol\":\"TCP\"}],\"resources\":{}}],\"serviceAccountName\":\"cert-manager\"}}}}\n"
                },
                "creationTimestamp": "2022-11-14T09:43:09Z",
                "generation": 1,
                "labels": {
                    "app": "cert-manager",
                    "app.kubernetes.io/component": "controller",
                    "app.kubernetes.io/instance": "cert-manager",
                    "app.kubernetes.io/name": "cert-manager"
                },
                "name": "cert-manager",
                "namespace": "cert-manager",
                "resourceVersion": "20956433",
                "uid": "45ed0692-585d-4002-a857-178e474a811f"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "controller",
                        "app.kubernetes.io/instance": "cert-manager",
                        "app.kubernetes.io/name": "cert-manager"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "prometheus.io/path": "/metrics",
                            "prometheus.io/port": "9402",
                            "prometheus.io/scrape": "true"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app": "cert-manager",
                            "app.kubernetes.io/component": "controller",
                            "app.kubernetes.io/instance": "cert-manager",
                            "app.kubernetes.io/name": "cert-manager"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--v=2",
                                    "--cluster-resource-namespace=$(POD_NAMESPACE)",
                                    "--leader-election-namespace=kube-system"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "quay.io/jetstack/cert-manager-controller:v1.3.1",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "cert-manager",
                                "ports": [
                                    {
                                        "containerPort": 9402,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "cert-manager",
                        "serviceAccountName": "cert-manager",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2022-11-14T09:43:09Z",
                        "lastUpdateTime": "2022-11-14T09:43:15Z",
                        "message": "ReplicaSet \"cert-manager-76f6c4cd4c\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    },
                    {
                        "lastTransitionTime": "2023-04-10T03:52:46Z",
                        "lastUpdateTime": "2023-04-10T03:52:46Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"cainjector\",\"app.kubernetes.io/component\":\"cainjector\",\"app.kubernetes.io/instance\":\"cert-manager\",\"app.kubernetes.io/name\":\"cainjector\"},\"name\":\"cert-manager-cainjector\",\"namespace\":\"cert-manager\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app.kubernetes.io/component\":\"cainjector\",\"app.kubernetes.io/instance\":\"cert-manager\",\"app.kubernetes.io/name\":\"cainjector\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"cainjector\",\"app.kubernetes.io/component\":\"cainjector\",\"app.kubernetes.io/instance\":\"cert-manager\",\"app.kubernetes.io/name\":\"cainjector\"}},\"spec\":{\"containers\":[{\"args\":[\"--v=2\",\"--leader-election-namespace=kube-system\"],\"env\":[{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"quay.io/jetstack/cert-manager-cainjector:v1.3.1\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"cert-manager\",\"resources\":{}}],\"serviceAccountName\":\"cert-manager-cainjector\"}}}}\n"
                },
                "creationTimestamp": "2022-11-14T09:43:09Z",
                "generation": 1,
                "labels": {
                    "app": "cainjector",
                    "app.kubernetes.io/component": "cainjector",
                    "app.kubernetes.io/instance": "cert-manager",
                    "app.kubernetes.io/name": "cainjector"
                },
                "name": "cert-manager-cainjector",
                "namespace": "cert-manager",
                "resourceVersion": "20956500",
                "uid": "13edff87-1a1d-4578-9f6e-6bf0a69e9286"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "cainjector",
                        "app.kubernetes.io/instance": "cert-manager",
                        "app.kubernetes.io/name": "cainjector"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "cainjector",
                            "app.kubernetes.io/component": "cainjector",
                            "app.kubernetes.io/instance": "cert-manager",
                            "app.kubernetes.io/name": "cainjector"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--v=2",
                                    "--leader-election-namespace=kube-system"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "quay.io/jetstack/cert-manager-cainjector:v1.3.1",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "cert-manager",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "cert-manager-cainjector",
                        "serviceAccountName": "cert-manager-cainjector",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2022-11-14T09:43:09Z",
                        "lastUpdateTime": "2022-11-14T09:43:15Z",
                        "message": "ReplicaSet \"cert-manager-cainjector-785f4d76b8\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    },
                    {
                        "lastTransitionTime": "2023-04-10T03:52:53Z",
                        "lastUpdateTime": "2023-04-10T03:52:53Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"webhook\",\"app.kubernetes.io/component\":\"webhook\",\"app.kubernetes.io/instance\":\"cert-manager\",\"app.kubernetes.io/name\":\"webhook\"},\"name\":\"cert-manager-webhook\",\"namespace\":\"cert-manager\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app.kubernetes.io/component\":\"webhook\",\"app.kubernetes.io/instance\":\"cert-manager\",\"app.kubernetes.io/name\":\"webhook\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"webhook\",\"app.kubernetes.io/component\":\"webhook\",\"app.kubernetes.io/instance\":\"cert-manager\",\"app.kubernetes.io/name\":\"webhook\"}},\"spec\":{\"containers\":[{\"args\":[\"--v=2\",\"--secure-port=10250\",\"--dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)\",\"--dynamic-serving-ca-secret-name=cert-manager-webhook-ca\",\"--dynamic-serving-dns-names=cert-manager-webhook,cert-manager-webhook.cert-manager,cert-manager-webhook.cert-manager.svc\"],\"env\":[{\"name\":\"POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"quay.io/jetstack/cert-manager-webhook:v1.3.1\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/livez\",\"port\":6080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":60,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"name\":\"cert-manager\",\"ports\":[{\"containerPort\":10250,\"name\":\"https\"}],\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/healthz\",\"port\":6080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":5,\"periodSeconds\":5,\"successThreshold\":1,\"timeoutSeconds\":1},\"resources\":{}}],\"serviceAccountName\":\"cert-manager-webhook\"}}}}\n"
                },
                "creationTimestamp": "2022-11-14T09:43:10Z",
                "generation": 1,
                "labels": {
                    "app": "webhook",
                    "app.kubernetes.io/component": "webhook",
                    "app.kubernetes.io/instance": "cert-manager",
                    "app.kubernetes.io/name": "webhook"
                },
                "name": "cert-manager-webhook",
                "namespace": "cert-manager",
                "resourceVersion": "20956494",
                "uid": "5d4ec7e8-b3cc-4510-9471-adc1d668b626"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "webhook",
                        "app.kubernetes.io/instance": "cert-manager",
                        "app.kubernetes.io/name": "webhook"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "webhook",
                            "app.kubernetes.io/component": "webhook",
                            "app.kubernetes.io/instance": "cert-manager",
                            "app.kubernetes.io/name": "webhook"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--v=2",
                                    "--secure-port=10250",
                                    "--dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)",
                                    "--dynamic-serving-ca-secret-name=cert-manager-webhook-ca",
                                    "--dynamic-serving-dns-names=cert-manager-webhook,cert-manager-webhook.cert-manager,cert-manager-webhook.cert-manager.svc"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "image": "quay.io/jetstack/cert-manager-webhook:v1.3.1",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/livez",
                                        "port": 6080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "cert-manager",
                                "ports": [
                                    {
                                        "containerPort": 10250,
                                        "name": "https",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 6080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "cert-manager-webhook",
                        "serviceAccountName": "cert-manager-webhook",
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2022-11-14T09:43:10Z",
                        "lastUpdateTime": "2022-11-14T09:43:22Z",
                        "message": "ReplicaSet \"cert-manager-webhook-7485454cd7\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    },
                    {
                        "lastTransitionTime": "2023-04-10T03:52:52Z",
                        "lastUpdateTime": "2023-04-10T03:52:52Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "apisix",
                    "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2022-11-15T03:10:06Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/instance": "apisix",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "apisix",
                    "app.kubernetes.io/version": "2.15.0",
                    "helm.sh/chart": "apisix-0.11.2"
                },
                "name": "apisix",
                "namespace": "default",
                "resourceVersion": "1176924",
                "uid": "5784159f-dad1-4567-91dc-843c2ea9fc11"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/instance": "apisix",
                        "app.kubernetes.io/name": "apisix"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "checksum/config": "ab8715e56059adeef68812db1f038eb146bbf5fd865140bbaff68ef281cf1781"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/instance": "apisix",
                            "app.kubernetes.io/name": "apisix"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "image": "apache/apisix:2.15.0-alpine",
                                "imagePullPolicy": "IfNotPresent",
                                "lifecycle": {
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                "/bin/sh",
                                                "-c",
                                                "sleep 30"
                                            ]
                                        }
                                    }
                                },
                                "name": "apisix",
                                "ports": [
                                    {
                                        "containerPort": 9080,
                                        "name": "http",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9443,
                                        "name": "tls",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9180,
                                        "name": "admin",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 6,
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "tcpSocket": {
                                        "port": 9080
                                    },
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/usr/local/apisix/conf/config.yaml",
                                        "name": "apisix-config",
                                        "subPath": "config.yaml"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "command": [
                                    "sh",
                                    "-c",
                                    "until nc -z apisix-etcd.default.svc.cluster.local 2379; do echo waiting for etcd `date`; sleep 2; done;"
                                ],
                                "image": "busybox:1.28",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "wait-etcd",
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "default",
                        "serviceAccountName": "default",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "apisix"
                                },
                                "name": "apisix-config"
                            }
                        ]
                    }
                }
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2022-11-15T03:10:06Z",
                        "lastUpdateTime": "2022-11-15T03:14:51Z",
                        "message": "ReplicaSet \"apisix-6d89854bc5\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    },
                    {
                        "lastTransitionTime": "2022-11-21T03:05:18Z",
                        "lastUpdateTime": "2022-11-21T03:05:18Z",
                        "message": "Deployment does not have minimum availability.",
                        "reason": "MinimumReplicasUnavailable",
                        "status": "False",
                        "type": "Available"
                    }
                ],
                "observedGeneration": 1,
                "replicas": 1,
                "unavailableReplicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "apisix-dashboard",
                    "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2022-11-15T03:31:48Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/instance": "apisix-dashboard",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "apisix-dashboard",
                    "app.kubernetes.io/version": "2.13.0",
                    "helm.sh/chart": "apisix-dashboard-0.6.1"
                },
                "name": "apisix-dashboard",
                "namespace": "default",
                "resourceVersion": "1176976",
                "uid": "5f638c3e-9c8f-420e-9e44-1bc8dfb3ac05"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/instance": "apisix-dashboard",
                        "app.kubernetes.io/name": "apisix-dashboard"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "checksum/config": "f926c6074ef80cbe3f738a0627267526e97547858cff5407323985c28fc47ddc"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/instance": "apisix-dashboard",
                            "app.kubernetes.io/name": "apisix-dashboard"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "image": "apache/apisix-dashboard:2.13-alpine",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/ping",
                                        "port": "http",
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "apisix-dashboard",
                                "ports": [
                                    {
                                        "containerPort": 9000,
                                        "name": "http",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/ping",
                                        "port": "http",
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "securityContext": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/usr/local/apisix-dashboard/conf/conf.yaml",
                                        "name": "apisix-dashboard-config",
                                        "subPath": "conf.yaml"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "apisix-dashboard",
                        "serviceAccountName": "apisix-dashboard",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "name": "apisix-dashboard"
                                },
                                "name": "apisix-dashboard-config"
                            }
                        ]
                    }
                }
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2022-11-15T03:31:48Z",
                        "lastUpdateTime": "2022-11-15T03:31:50Z",
                        "message": "ReplicaSet \"apisix-dashboard-b544bd766\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    },
                    {
                        "lastTransitionTime": "2022-11-21T03:05:22Z",
                        "lastUpdateTime": "2022-11-21T03:05:22Z",
                        "message": "Deployment does not have minimum availability.",
                        "reason": "MinimumReplicasUnavailable",
                        "status": "False",
                        "type": "Available"
                    }
                ],
                "observedGeneration": 1,
                "replicas": 1,
                "unavailableReplicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "apisix",
                    "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2022-11-15T03:10:06Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/instance": "apisix",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "ingress-controller",
                    "app.kubernetes.io/version": "1.5.0",
                    "helm.sh/chart": "ingress-controller-0.10.1"
                },
                "name": "apisix-ingress-controller",
                "namespace": "default",
                "resourceVersion": "218247",
                "uid": "4fa580a5-4158-4f1c-aa33-84df639bc0c4"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/instance": "apisix",
                        "app.kubernetes.io/name": "ingress-controller"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": {
                            "checksum/config": "6bac36582b56963dbc2cc7a9761ebe7a2f874ca65d07c45e9cc15a2c5d1e45d3"
                        },
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/instance": "apisix",
                            "app.kubernetes.io/name": "ingress-controller"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "command": [
                                    "/ingress-apisix/apisix-ingress-controller",
                                    "ingress",
                                    "--config-path",
                                    "/ingress-apisix/conf/config.yaml"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    }
                                ],
                                "image": "apache/apisix-ingress-controller:1.5.0",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "ingress-controller",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "http",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/ingress-apisix/conf",
                                        "name": "configuration"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "initContainers": [
                            {
                                "command": [
                                    "sh",
                                    "-c",
                                    "until nc -z apisix-admin.ingress-apisix.svc.cluster.local 9180 ; do echo waiting for apisix-admin; sleep 2; done;"
                                ],
                                "image": "busybox:1.28",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "wait-apisix-admin",
                                "resources": {},
                                "securityContext": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "apisix-ingress-controller",
                        "serviceAccountName": "apisix-ingress-controller",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "config.yaml",
                                            "path": "config.yaml"
                                        }
                                    ],
                                    "name": "apisix-configmap"
                                },
                                "name": "configuration"
                            }
                        ]
                    }
                }
            },
            "status": {
                "conditions": [
                    {
                        "lastTransitionTime": "2022-11-15T03:10:06Z",
                        "lastUpdateTime": "2022-11-15T03:10:06Z",
                        "message": "Deployment does not have minimum availability.",
                        "reason": "MinimumReplicasUnavailable",
                        "status": "False",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2022-11-15T03:20:07Z",
                        "lastUpdateTime": "2022-11-15T03:20:07Z",
                        "message": "ReplicaSet \"apisix-ingress-controller-6ccdb9c8fc\" has timed out progressing.",
                        "reason": "ProgressDeadlineExceeded",
                        "status": "False",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "replicas": 1,
                "unavailableReplicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2022-11-14T08:15:41Z",
                "generation": 6,
                "labels": {
                    "k8s-app": "kube-dns"
                },
                "name": "coredns",
                "namespace": "kube-system",
                "resourceVersion": "20956454",
                "uid": "c01a6ab7-f6bd-4b39-862d-108c3e7adc8e"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": 1
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns"
                        }
                    },
                    "spec": {
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        },
                                        "weight": 100
                                    }
                                ]
                            }
                        },
                        "containers": [
                            {
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "image": "registry.k8s.io/coredns/coredns:v1.9.3",
                                "imagePullPolicy": "IfNotPresent",
                                "livenessProbe": {
                                    "failureThreshold": 5,
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 5
                                },
                                "name": "coredns",
                                "ports": [
                                    {
                                        "containerPort": 53,
                                        "name": "dns",
                                        "protocol": "UDP"
                                    },
                                    {
                                        "containerPort": 53,
                                        "name": "dns-tcp",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9153,
                                        "name": "metrics",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false,
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/coredns",
                                        "name": "config-volume",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "priorityClassName": "system-cluster-critical",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "coredns",
                        "serviceAccountName": "coredns",
                        "terminationGracePeriodSeconds": 30,
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/master"
                            },
                            {
                                "effect": "NoSchedule",
                                "key": "node-role.kubernetes.io/control-plane"
                            }
                        ],
                        "volumes": [
                            {
                                "configMap": {
                                    "defaultMode": 420,
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "name": "coredns"
                                },
                                "name": "config-volume"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2022-11-14T08:15:53Z",
                        "lastUpdateTime": "2022-11-14T08:15:53Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2022-11-14T08:15:53Z",
                        "lastUpdateTime": "2022-11-14T08:15:56Z",
                        "message": "ReplicaSet \"coredns-565d847f94\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 6,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "hostpath-provisioner",
                    "meta.helm.sh/release-namespace": "kube-system"
                },
                "creationTimestamp": "2022-11-14T08:19:42Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/instance": "hostpath-provisioner",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "hostpath-provisioner",
                    "helm.sh/chart": "hostpath-provisioner-0.2.13"
                },
                "name": "hostpath-provisioner",
                "namespace": "kube-system",
                "resourceVersion": "20956480",
                "uid": "d62469ca-b442-4053-a727-f9fd0f118554"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/instance": "hostpath-provisioner",
                        "app.kubernetes.io/name": "hostpath-provisioner"
                    }
                },
                "strategy": {
                    "type": "Recreate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/instance": "hostpath-provisioner",
                            "app.kubernetes.io/name": "hostpath-provisioner"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NODE_HOST_PATH",
                                        "value": "/mnt/hostpath"
                                    },
                                    {
                                        "name": "HOSTPATH_PROVISIONER_NAME",
                                        "value": "hostpath"
                                    }
                                ],
                                "image": "quay.io/rimusz/hostpath-provisioner:v0.2.5",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "hostpath-provisioner",
                                "resources": {
                                    "limits": {
                                        "cpu": "100m",
                                        "memory": "128Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "128Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/mnt/hostpath",
                                        "name": "pv-volume"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "hostpath-provisioner",
                        "serviceAccountName": "hostpath-provisioner",
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "hostPath": {
                                    "path": "/mnt/hostpath",
                                    "type": ""
                                },
                                "name": "pv-volume"
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2022-11-14T08:19:42Z",
                        "lastUpdateTime": "2022-11-14T08:20:08Z",
                        "message": "ReplicaSet \"hostpath-provisioner-5978dc8846\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    },
                    {
                        "lastTransitionTime": "2023-04-10T03:52:50Z",
                        "lastUpdateTime": "2023-04-10T03:52:50Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "nebula-operator",
                    "meta.helm.sh/release-namespace": "nebula-operator-system"
                },
                "creationTimestamp": "2022-11-14T09:43:40Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/component": "controller-manager",
                    "app.kubernetes.io/instance": "nebula-operator",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "nebula-operator",
                    "app.kubernetes.io/version": "1.0.0",
                    "helm.sh/chart": "nebula-operator-1.2.0"
                },
                "name": "nebula-operator-controller-manager-deployment",
                "namespace": "nebula-operator-system",
                "resourceVersion": "20956684",
                "uid": "f27a5fda-ec58-437b-bc8d-6a45fea976d6"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 2,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "controller-manager",
                        "app.kubernetes.io/instance": "nebula-operator",
                        "app.kubernetes.io/name": "nebula-operator"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "controller-manager",
                            "app.kubernetes.io/instance": "nebula-operator",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "nebula-operator",
                            "app.kubernetes.io/version": "1.0.0",
                            "helm.sh/chart": "nebula-operator-1.2.0"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "--health-probe-bind-address=:8081",
                                    "--metrics-bind-address=:8080",
                                    "--enable-kruise=false",
                                    "--max-concurrent-reconciles=3",
                                    "--enable-leader-election",
                                    "--leader-election-namespace=nebula-operator-system",
                                    "--admission-webhook=true"
                                ],
                                "command": [
                                    "/usr/local/bin/controller-manager"
                                ],
                                "image": "vesoft/nebula-operator:v1.2.0",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8081,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 15,
                                    "periodSeconds": 20,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "controller-manager",
                                "ports": [
                                    {
                                        "containerPort": 9443,
                                        "name": "webhook-server",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": 8081,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "200m",
                                        "memory": "200Mi"
                                    },
                                    "requests": {
                                        "cpu": "1m",
                                        "memory": "100Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": false
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/tmp/k8s-webhook-server/serving-certs",
                                        "name": "cert",
                                        "readOnly": true
                                    }
                                ]
                            },
                            {
                                "args": [
                                    "--secure-listen-address=0.0.0.0:8443",
                                    "--upstream=http://127.0.0.1:8080/",
                                    "--logtostderr=true",
                                    "--v=2"
                                ],
                                "image": "gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0",
                                "imagePullPolicy": "Always",
                                "name": "kube-rbac-proxy",
                                "ports": [
                                    {
                                        "containerPort": 8443,
                                        "name": "https",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "100m",
                                        "memory": "30Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "20Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {
                            "runAsNonRoot": true
                        },
                        "serviceAccount": "nebula-operator-controller-manager-sa",
                        "serviceAccountName": "nebula-operator-controller-manager-sa",
                        "terminationGracePeriodSeconds": 10,
                        "volumes": [
                            {
                                "name": "cert",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "nebula-operator-webhook-secret"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 2,
                "conditions": [
                    {
                        "lastTransitionTime": "2022-11-14T09:43:40Z",
                        "lastUpdateTime": "2022-11-14T09:45:03Z",
                        "message": "ReplicaSet \"nebula-operator-controller-manager-deployment-86749f78c8\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    },
                    {
                        "lastTransitionTime": "2023-04-10T03:53:26Z",
                        "lastUpdateTime": "2023-04-10T03:53:26Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 2,
                "replicas": 2,
                "updatedReplicas": 2
            }
        }
    ],
    "kind": "List",
    "metadata": {
        "resourceVersion": ""
    }
}
