{
    "apiVersion": "v1",
    "items": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "prometheus.io/path": "/metrics",
                    "prometheus.io/port": "9402",
                    "prometheus.io/scrape": "true"
                },
                "creationTimestamp": "2022-11-14T09:43:09Z",
                "generateName": "cert-manager-76f6c4cd4c-",
                "labels": {
                    "app": "cert-manager",
                    "app.kubernetes.io/component": "controller",
                    "app.kubernetes.io/instance": "cert-manager",
                    "app.kubernetes.io/name": "cert-manager",
                    "pod-template-hash": "76f6c4cd4c"
                },
                "name": "cert-manager-76f6c4cd4c-tnqrf",
                "namespace": "cert-manager",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "cert-manager-76f6c4cd4c",
                        "uid": "4d836607-9518-42d4-8152-a456a7264717"
                    }
                ],
                "resourceVersion": "21243936",
                "uid": "37b80244-b071-4f15-8aed-5866eaa36949"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--v=2",
                            "--cluster-resource-namespace=$(POD_NAMESPACE)",
                            "--leader-election-namespace=kube-system"
                        ],
                        "env": [
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jetstack/cert-manager-controller:v1.3.1",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "cert-manager",
                        "ports": [
                            {
                                "containerPort": 9402,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-ntbqw",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "minikube",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "cert-manager",
                "serviceAccountName": "cert-manager",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "kube-api-access-ntbqw",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-14T09:43:11Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-10T03:52:28Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-10T03:52:28Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-14T09:43:10Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://e0b29c006c4ff51ef577b26bdf3ef3ea217c382cef9433e6bf557590039509a9",
                        "image": "quay.io/jetstack/cert-manager-controller:v1.3.1",
                        "imageID": "docker-pullable://quay.io/jetstack/cert-manager-controller@sha256:22543d32793abc0069680f80ee5be348dcbb3c74c85ba55835b4cf6c76fe18da",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://ed4a8abc9eea9042b9f799ed34d67b652a1f44bcf61f848aeee18921df8663d6",
                                "exitCode": 1,
                                "finishedAt": "2023-04-11T08:46:38Z",
                                "reason": "Error",
                                "startedAt": "2023-04-10T03:52:27Z"
                            }
                        },
                        "name": "cert-manager",
                        "ready": true,
                        "restartCount": 6,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-04-11T08:47:10Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.49.2",
                "phase": "Running",
                "podIP": "172.17.0.7",
                "podIPs": [
                    {
                        "ip": "172.17.0.7"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2022-11-14T09:43:11Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2022-11-14T09:43:09Z",
                "generateName": "cert-manager-cainjector-785f4d76b8-",
                "labels": {
                    "app": "cainjector",
                    "app.kubernetes.io/component": "cainjector",
                    "app.kubernetes.io/instance": "cert-manager",
                    "app.kubernetes.io/name": "cainjector",
                    "pod-template-hash": "785f4d76b8"
                },
                "name": "cert-manager-cainjector-785f4d76b8-vnv2v",
                "namespace": "cert-manager",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "cert-manager-cainjector-785f4d76b8",
                        "uid": "fa9547f5-3954-4736-b0c5-b5259e0b8f36"
                    }
                ],
                "resourceVersion": "21244192",
                "uid": "00de2e71-b9d6-49c3-9b57-2825c6316692"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--v=2",
                            "--leader-election-namespace=kube-system"
                        ],
                        "env": [
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jetstack/cert-manager-cainjector:v1.3.1",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "cert-manager",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-vp4d6",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "minikube",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "cert-manager-cainjector",
                "serviceAccountName": "cert-manager-cainjector",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "kube-api-access-vp4d6",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-14T09:43:09Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:48:25Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:48:25Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-14T09:43:09Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://41dd7408469d5cd582494da40773339f1d159eb8bcf5bf8c759f1de1f65a414d",
                        "image": "quay.io/jetstack/cert-manager-cainjector:v1.3.1",
                        "imageID": "docker-pullable://quay.io/jetstack/cert-manager-cainjector@sha256:51c0df411b66aa175e9fc6840f3135d55b52c3781d0b3d4aa10862066d460193",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://2d49e7b1622e04f9e2c29ba850a7a11fd83420b3799c5484b06c4d1f47f3da41",
                                "exitCode": 1,
                                "finishedAt": "2023-04-11T08:47:39Z",
                                "reason": "Error",
                                "startedAt": "2023-04-11T08:47:39Z"
                            }
                        },
                        "name": "cert-manager",
                        "ready": true,
                        "restartCount": 11,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-04-11T08:48:19Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.49.2",
                "phase": "Running",
                "podIP": "172.17.0.11",
                "podIPs": [
                    {
                        "ip": "172.17.0.11"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2022-11-14T09:43:09Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2022-11-14T09:43:10Z",
                "generateName": "cert-manager-webhook-7485454cd7-",
                "labels": {
                    "app": "webhook",
                    "app.kubernetes.io/component": "webhook",
                    "app.kubernetes.io/instance": "cert-manager",
                    "app.kubernetes.io/name": "webhook",
                    "pod-template-hash": "7485454cd7"
                },
                "name": "cert-manager-webhook-7485454cd7-gg6c6",
                "namespace": "cert-manager",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "cert-manager-webhook-7485454cd7",
                        "uid": "a1e13ca4-f3ef-4fc9-99fb-e303afd592f2"
                    }
                ],
                "resourceVersion": "21244052",
                "uid": "c1fa3845-828a-49d2-91dd-4acb69902857"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--v=2",
                            "--secure-port=10250",
                            "--dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)",
                            "--dynamic-serving-ca-secret-name=cert-manager-webhook-ca",
                            "--dynamic-serving-dns-names=cert-manager-webhook,cert-manager-webhook.cert-manager,cert-manager-webhook.cert-manager.svc"
                        ],
                        "env": [
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/jetstack/cert-manager-webhook:v1.3.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/livez",
                                "port": 6080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "cert-manager",
                        "ports": [
                            {
                                "containerPort": 10250,
                                "name": "https",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 6080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-w887f",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "minikube",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "cert-manager-webhook",
                "serviceAccountName": "cert-manager-webhook",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "kube-api-access-w887f",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-14T09:43:11Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:48:02Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:48:02Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-14T09:43:11Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://7069ecd4b781acf6aff971775aaa58e3f9d2adfc7c2f072ed9ec3ab8e039e299",
                        "image": "quay.io/jetstack/cert-manager-webhook:v1.3.1",
                        "imageID": "docker-pullable://quay.io/jetstack/cert-manager-webhook@sha256:41eacd93a30b566b780a6ae525b2547d2a87f1ec5f067fc02840a220aeb0c3f7",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://703b5ce4604bcb167180967caec3bd1dba95558423d63b2ececdf07e3833e709",
                                "exitCode": 0,
                                "finishedAt": "2023-04-11T08:46:38Z",
                                "reason": "Completed",
                                "startedAt": "2023-04-10T03:52:41Z"
                            }
                        },
                        "name": "cert-manager",
                        "ready": true,
                        "restartCount": 6,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-04-11T08:47:14Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.49.2",
                "phase": "Running",
                "podIP": "172.17.0.10",
                "podIPs": [
                    {
                        "ip": "172.17.0.10"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2022-11-14T09:43:11Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "checksum/config": "ab8715e56059adeef68812db1f038eb146bbf5fd865140bbaff68ef281cf1781"
                },
                "creationTimestamp": "2022-11-15T09:49:22Z",
                "generateName": "apisix-6d89854bc5-",
                "labels": {
                    "app.kubernetes.io/instance": "apisix",
                    "app.kubernetes.io/name": "apisix",
                    "pod-template-hash": "6d89854bc5"
                },
                "name": "apisix-6d89854bc5-5m788",
                "namespace": "default",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "apisix-6d89854bc5",
                        "uid": "4965aed3-8ff0-4a38-b59b-8aace373a665"
                    }
                ],
                "resourceVersion": "21243969",
                "uid": "b6d09c26-0658-4268-9e0e-eb9b7c9fbc54"
            },
            "spec": {
                "containers": [
                    {
                        "image": "apache/apisix:2.15.0-alpine",
                        "imagePullPolicy": "IfNotPresent",
                        "lifecycle": {
                            "preStop": {
                                "exec": {
                                    "command": [
                                        "/bin/sh",
                                        "-c",
                                        "sleep 30"
                                    ]
                                }
                            }
                        },
                        "name": "apisix",
                        "ports": [
                            {
                                "containerPort": 9080,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 9443,
                                "name": "tls",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 9180,
                                "name": "admin",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 6,
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "tcpSocket": {
                                "port": 9080
                            },
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/usr/local/apisix/conf/config.yaml",
                                "name": "apisix-config",
                                "subPath": "config.yaml"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-l7kq6",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "initContainers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "until nc -z apisix-etcd.default.svc.cluster.local 2379; do echo waiting for etcd `date`; sleep 2; done;"
                        ],
                        "image": "busybox:1.28",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "wait-etcd",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-l7kq6",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "minikube",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "apisix"
                        },
                        "name": "apisix-config"
                    },
                    {
                        "name": "kube-api-access-l7kq6",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-21T03:05:27Z",
                        "message": "containers with incomplete status: [wait-etcd]",
                        "reason": "ContainersNotInitialized",
                        "status": "False",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-21T03:04:59Z",
                        "message": "containers with unready status: [apisix]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-21T03:04:59Z",
                        "message": "containers with unready status: [apisix]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-15T09:49:22Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://22286c199bae7ddf91721b1892ba98ac6ad089a93369dda73d5d55a38fc5c313",
                        "image": "apache/apisix:2.15.0-alpine",
                        "imageID": "docker-pullable://apache/apisix@sha256:de49e358f7ac6c9214460890213e9ab358e87bff11c0d144cad2765b1189f4a8",
                        "lastState": {},
                        "name": "apisix",
                        "ready": false,
                        "restartCount": 1,
                        "started": false,
                        "state": {
                            "terminated": {
                                "containerID": "docker://22286c199bae7ddf91721b1892ba98ac6ad089a93369dda73d5d55a38fc5c313",
                                "exitCode": 255,
                                "finishedAt": "2022-11-21T03:04:29Z",
                                "reason": "Error",
                                "startedAt": "2022-11-16T07:02:08Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.49.2",
                "initContainerStatuses": [
                    {
                        "containerID": "docker://0299f83a5bd763553a1fee23d3c8d76173330ddb9915c287968473f8beafb583",
                        "image": "busybox:1.28",
                        "imageID": "docker-pullable://busybox@sha256:141c253bc4c3fd0a201d32dc1f493bcf3fff003b6df416dea4f41046e0f37d47",
                        "lastState": {},
                        "name": "wait-etcd",
                        "ready": false,
                        "restartCount": 5,
                        "state": {
                            "running": {
                                "startedAt": "2023-04-11T08:47:17Z"
                            }
                        }
                    }
                ],
                "phase": "Pending",
                "podIP": "172.17.0.19",
                "podIPs": [
                    {
                        "ip": "172.17.0.19"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2022-11-15T09:49:22Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "checksum/config": "f926c6074ef80cbe3f738a0627267526e97547858cff5407323985c28fc47ddc"
                },
                "creationTimestamp": "2022-11-15T03:31:48Z",
                "generateName": "apisix-dashboard-b544bd766-",
                "labels": {
                    "app.kubernetes.io/instance": "apisix-dashboard",
                    "app.kubernetes.io/name": "apisix-dashboard",
                    "pod-template-hash": "b544bd766"
                },
                "name": "apisix-dashboard-b544bd766-nh79j",
                "namespace": "default",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "apisix-dashboard-b544bd766",
                        "uid": "ee75da0a-56d2-497e-b5b1-ff549784175b"
                    }
                ],
                "resourceVersion": "21254000",
                "uid": "fed4e0fb-30a3-4591-b385-10524f64b455"
            },
            "spec": {
                "containers": [
                    {
                        "image": "apache/apisix-dashboard:2.13-alpine",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/ping",
                                "port": "http",
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "apisix-dashboard",
                        "ports": [
                            {
                                "containerPort": 9000,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/ping",
                                "port": "http",
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "securityContext": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/usr/local/apisix-dashboard/conf/conf.yaml",
                                "name": "apisix-dashboard-config",
                                "subPath": "conf.yaml"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-rjczw",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "minikube",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "apisix-dashboard",
                "serviceAccountName": "apisix-dashboard",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "apisix-dashboard"
                        },
                        "name": "apisix-dashboard-config"
                    },
                    {
                        "name": "kube-api-access-rjczw",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-15T03:31:48Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-21T03:04:59Z",
                        "message": "containers with unready status: [apisix-dashboard]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-21T03:04:59Z",
                        "message": "containers with unready status: [apisix-dashboard]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-15T03:31:48Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://0d895a14f9cad4fce9d43cfb7fa845aa68611e6ac5b330e911d7b3a82e9e30ce",
                        "image": "apache/apisix-dashboard:2.13-alpine",
                        "imageID": "docker-pullable://apache/apisix-dashboard@sha256:7ce2f9517a7472a17c32244b75effdbebb0f9296815b5a675f591fd220a868ec",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://0d895a14f9cad4fce9d43cfb7fa845aa68611e6ac5b330e911d7b3a82e9e30ce",
                                "exitCode": 0,
                                "finishedAt": "2023-04-11T09:47:06Z",
                                "reason": "Completed",
                                "startedAt": "2023-04-11T09:47:01Z"
                            }
                        },
                        "name": "apisix-dashboard",
                        "ready": false,
                        "restartCount": 27516,
                        "started": false,
                        "state": {
                            "waiting": {
                                "message": "back-off 5m0s restarting failed container=apisix-dashboard pod=apisix-dashboard-b544bd766-nh79j_default(fed4e0fb-30a3-4591-b385-10524f64b455)",
                                "reason": "CrashLoopBackOff"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.49.2",
                "phase": "Running",
                "podIP": "172.17.0.16",
                "podIPs": [
                    {
                        "ip": "172.17.0.16"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2022-11-15T03:31:48Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "checksum/token-secret": "1ad535461d73161af0c2758bcd5d123827b74f7c0020e76bc2d082f653651f81"
                },
                "creationTimestamp": "2023-04-10T04:08:44Z",
                "generateName": "apisix-etcd-",
                "labels": {
                    "app.kubernetes.io/instance": "apisix",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "etcd",
                    "controller-revision-hash": "apisix-etcd-c58467596",
                    "helm.sh/chart": "etcd-8.3.4",
                    "statefulset.kubernetes.io/pod-name": "apisix-etcd-0"
                },
                "name": "apisix-etcd-0",
                "namespace": "default",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "apisix-etcd",
                        "uid": "2fb4d7b1-6f76-42dc-8cd6-ba519b06a6b2"
                    }
                ],
                "resourceVersion": "21253516",
                "uid": "6d2e7d59-f1de-430d-88a0-78048b00ff55"
            },
            "spec": {
                "affinity": {
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchLabels": {
                                            "app.kubernetes.io/instance": "apisix",
                                            "app.kubernetes.io/name": "etcd"
                                        }
                                    },
                                    "namespaces": [
                                        "default"
                                    ],
                                    "topologyKey": "kubernetes.io/hostname"
                                },
                                "weight": 1
                            }
                        ]
                    }
                },
                "containers": [
                    {
                        "env": [
                            {
                                "name": "BITNAMI_DEBUG",
                                "value": "false"
                            },
                            {
                                "name": "MY_POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "MY_POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "MY_STS_NAME",
                                "value": "apisix-etcd"
                            },
                            {
                                "name": "ETCDCTL_API",
                                "value": "3"
                            },
                            {
                                "name": "ETCD_ON_K8S",
                                "value": "yes"
                            },
                            {
                                "name": "ETCD_START_FROM_SNAPSHOT",
                                "value": "no"
                            },
                            {
                                "name": "ETCD_DISASTER_RECOVERY",
                                "value": "no"
                            },
                            {
                                "name": "ETCD_NAME",
                                "value": "$(MY_POD_NAME)"
                            },
                            {
                                "name": "ETCD_DATA_DIR",
                                "value": "/bitnami/etcd/data"
                            },
                            {
                                "name": "ETCD_LOG_LEVEL",
                                "value": "info"
                            },
                            {
                                "name": "ALLOW_NONE_AUTHENTICATION",
                                "value": "yes"
                            },
                            {
                                "name": "ETCD_AUTH_TOKEN",
                                "value": "jwt,priv-key=/opt/bitnami/etcd/certs/token/jwt-token.pem,sign-method=RS256,ttl=10m"
                            },
                            {
                                "name": "ETCD_ADVERTISE_CLIENT_URLS",
                                "value": "http://$(MY_POD_NAME).apisix-etcd-headless.default.svc.cluster.local:2379,http://apisix-etcd.default.svc.cluster.local:2379"
                            },
                            {
                                "name": "ETCD_LISTEN_CLIENT_URLS",
                                "value": "http://0.0.0.0:2379"
                            },
                            {
                                "name": "ETCD_INITIAL_ADVERTISE_PEER_URLS",
                                "value": "http://$(MY_POD_NAME).apisix-etcd-headless.default.svc.cluster.local:2380"
                            },
                            {
                                "name": "ETCD_LISTEN_PEER_URLS",
                                "value": "http://0.0.0.0:2380"
                            },
                            {
                                "name": "ETCD_INITIAL_CLUSTER_TOKEN",
                                "value": "etcd-cluster-k8s"
                            },
                            {
                                "name": "ETCD_INITIAL_CLUSTER_STATE",
                                "value": "new"
                            },
                            {
                                "name": "ETCD_INITIAL_CLUSTER",
                                "value": "apisix-etcd-0=http://apisix-etcd-0.apisix-etcd-headless.default.svc.cluster.local:2380,apisix-etcd-1=http://apisix-etcd-1.apisix-etcd-headless.default.svc.cluster.local:2380,apisix-etcd-2=http://apisix-etcd-2.apisix-etcd-headless.default.svc.cluster.local:2380"
                            },
                            {
                                "name": "ETCD_CLUSTER_DOMAIN",
                                "value": "apisix-etcd-headless.default.svc.cluster.local"
                            }
                        ],
                        "image": "docker.io/bitnami/etcd:3.5.4-debian-11-r14",
                        "imagePullPolicy": "IfNotPresent",
                        "lifecycle": {
                            "preStop": {
                                "exec": {
                                    "command": [
                                        "/opt/bitnami/scripts/etcd/prestop.sh"
                                    ]
                                }
                            }
                        },
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/opt/bitnami/scripts/etcd/healthcheck.sh"
                                ]
                            },
                            "failureThreshold": 5,
                            "initialDelaySeconds": 60,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "etcd",
                        "ports": [
                            {
                                "containerPort": 2379,
                                "name": "client",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 2380,
                                "name": "peer",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    "/opt/bitnami/scripts/etcd/healthcheck.sh"
                                ]
                            },
                            "failureThreshold": 5,
                            "initialDelaySeconds": 60,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {},
                        "securityContext": {
                            "runAsNonRoot": true,
                            "runAsUser": 1001
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/bitnami/etcd",
                                "name": "data"
                            },
                            {
                                "mountPath": "/opt/bitnami/etcd/certs/token/",
                                "name": "etcd-jwt-token",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-gsftd",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "apisix-etcd-0",
                "nodeName": "minikube",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "fsGroup": 1001
                },
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "subdomain": "apisix-etcd-headless",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "data",
                        "persistentVolumeClaim": {
                            "claimName": "data-apisix-etcd-0"
                        }
                    },
                    {
                        "name": "etcd-jwt-token",
                        "secret": {
                            "defaultMode": 256,
                            "secretName": "apisix-etcd-jwt-token"
                        }
                    },
                    {
                        "name": "kube-api-access-gsftd",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-10T04:08:44Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-10T04:08:44Z",
                        "message": "containers with unready status: [etcd]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-10T04:08:44Z",
                        "message": "containers with unready status: [etcd]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-10T04:08:44Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://a7451d37182979b7a9a6bb5907c31158b53b05f9e1a48ec7bfb29eaa55501bcc",
                        "image": "bitnami/etcd:3.5.4-debian-11-r14",
                        "imageID": "docker-pullable://bitnami/etcd@sha256:e5ef30fa508e6f3a028a4e26acc7ec2803eea1370dc9c1da692ee0405cdaf50d",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://a7451d37182979b7a9a6bb5907c31158b53b05f9e1a48ec7bfb29eaa55501bcc",
                                "exitCode": 2,
                                "finishedAt": "2023-04-11T09:43:58Z",
                                "reason": "Error",
                                "startedAt": "2023-04-11T09:43:48Z"
                            }
                        },
                        "name": "etcd",
                        "ready": false,
                        "restartCount": 344,
                        "started": false,
                        "state": {
                            "waiting": {
                                "message": "back-off 5m0s restarting failed container=etcd pod=apisix-etcd-0_default(6d2e7d59-f1de-430d-88a0-78048b00ff55)",
                                "reason": "CrashLoopBackOff"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.49.2",
                "phase": "Running",
                "podIP": "172.17.0.23",
                "podIPs": [
                    {
                        "ip": "172.17.0.23"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-04-10T04:08:44Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "checksum/token-secret": "1ad535461d73161af0c2758bcd5d123827b74f7c0020e76bc2d082f653651f81"
                },
                "creationTimestamp": "2023-04-10T04:08:50Z",
                "generateName": "apisix-etcd-",
                "labels": {
                    "app.kubernetes.io/instance": "apisix",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "etcd",
                    "controller-revision-hash": "apisix-etcd-c58467596",
                    "helm.sh/chart": "etcd-8.3.4",
                    "statefulset.kubernetes.io/pod-name": "apisix-etcd-1"
                },
                "name": "apisix-etcd-1",
                "namespace": "default",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "apisix-etcd",
                        "uid": "2fb4d7b1-6f76-42dc-8cd6-ba519b06a6b2"
                    }
                ],
                "resourceVersion": "21253474",
                "uid": "ebb551d1-c8fc-400c-aeda-314cfda1e1b1"
            },
            "spec": {
                "affinity": {
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchLabels": {
                                            "app.kubernetes.io/instance": "apisix",
                                            "app.kubernetes.io/name": "etcd"
                                        }
                                    },
                                    "namespaces": [
                                        "default"
                                    ],
                                    "topologyKey": "kubernetes.io/hostname"
                                },
                                "weight": 1
                            }
                        ]
                    }
                },
                "containers": [
                    {
                        "env": [
                            {
                                "name": "BITNAMI_DEBUG",
                                "value": "false"
                            },
                            {
                                "name": "MY_POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "MY_POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "MY_STS_NAME",
                                "value": "apisix-etcd"
                            },
                            {
                                "name": "ETCDCTL_API",
                                "value": "3"
                            },
                            {
                                "name": "ETCD_ON_K8S",
                                "value": "yes"
                            },
                            {
                                "name": "ETCD_START_FROM_SNAPSHOT",
                                "value": "no"
                            },
                            {
                                "name": "ETCD_DISASTER_RECOVERY",
                                "value": "no"
                            },
                            {
                                "name": "ETCD_NAME",
                                "value": "$(MY_POD_NAME)"
                            },
                            {
                                "name": "ETCD_DATA_DIR",
                                "value": "/bitnami/etcd/data"
                            },
                            {
                                "name": "ETCD_LOG_LEVEL",
                                "value": "info"
                            },
                            {
                                "name": "ALLOW_NONE_AUTHENTICATION",
                                "value": "yes"
                            },
                            {
                                "name": "ETCD_AUTH_TOKEN",
                                "value": "jwt,priv-key=/opt/bitnami/etcd/certs/token/jwt-token.pem,sign-method=RS256,ttl=10m"
                            },
                            {
                                "name": "ETCD_ADVERTISE_CLIENT_URLS",
                                "value": "http://$(MY_POD_NAME).apisix-etcd-headless.default.svc.cluster.local:2379,http://apisix-etcd.default.svc.cluster.local:2379"
                            },
                            {
                                "name": "ETCD_LISTEN_CLIENT_URLS",
                                "value": "http://0.0.0.0:2379"
                            },
                            {
                                "name": "ETCD_INITIAL_ADVERTISE_PEER_URLS",
                                "value": "http://$(MY_POD_NAME).apisix-etcd-headless.default.svc.cluster.local:2380"
                            },
                            {
                                "name": "ETCD_LISTEN_PEER_URLS",
                                "value": "http://0.0.0.0:2380"
                            },
                            {
                                "name": "ETCD_INITIAL_CLUSTER_TOKEN",
                                "value": "etcd-cluster-k8s"
                            },
                            {
                                "name": "ETCD_INITIAL_CLUSTER_STATE",
                                "value": "new"
                            },
                            {
                                "name": "ETCD_INITIAL_CLUSTER",
                                "value": "apisix-etcd-0=http://apisix-etcd-0.apisix-etcd-headless.default.svc.cluster.local:2380,apisix-etcd-1=http://apisix-etcd-1.apisix-etcd-headless.default.svc.cluster.local:2380,apisix-etcd-2=http://apisix-etcd-2.apisix-etcd-headless.default.svc.cluster.local:2380"
                            },
                            {
                                "name": "ETCD_CLUSTER_DOMAIN",
                                "value": "apisix-etcd-headless.default.svc.cluster.local"
                            }
                        ],
                        "image": "docker.io/bitnami/etcd:3.5.4-debian-11-r14",
                        "imagePullPolicy": "IfNotPresent",
                        "lifecycle": {
                            "preStop": {
                                "exec": {
                                    "command": [
                                        "/opt/bitnami/scripts/etcd/prestop.sh"
                                    ]
                                }
                            }
                        },
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/opt/bitnami/scripts/etcd/healthcheck.sh"
                                ]
                            },
                            "failureThreshold": 5,
                            "initialDelaySeconds": 60,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "etcd",
                        "ports": [
                            {
                                "containerPort": 2379,
                                "name": "client",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 2380,
                                "name": "peer",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    "/opt/bitnami/scripts/etcd/healthcheck.sh"
                                ]
                            },
                            "failureThreshold": 5,
                            "initialDelaySeconds": 60,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {},
                        "securityContext": {
                            "runAsNonRoot": true,
                            "runAsUser": 1001
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/bitnami/etcd",
                                "name": "data"
                            },
                            {
                                "mountPath": "/opt/bitnami/etcd/certs/token/",
                                "name": "etcd-jwt-token",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-npfnm",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "apisix-etcd-1",
                "nodeName": "minikube",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "fsGroup": 1001
                },
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "subdomain": "apisix-etcd-headless",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "data",
                        "persistentVolumeClaim": {
                            "claimName": "data-apisix-etcd-1"
                        }
                    },
                    {
                        "name": "etcd-jwt-token",
                        "secret": {
                            "defaultMode": 256,
                            "secretName": "apisix-etcd-jwt-token"
                        }
                    },
                    {
                        "name": "kube-api-access-npfnm",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-10T04:08:50Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-10T04:08:50Z",
                        "message": "containers with unready status: [etcd]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-10T04:08:50Z",
                        "message": "containers with unready status: [etcd]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-10T04:08:50Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://b46cc718320c94093cf0f4f6cca233335210ef1a8685c12a2a53895fefa39ebd",
                        "image": "bitnami/etcd:3.5.4-debian-11-r14",
                        "imageID": "docker-pullable://bitnami/etcd@sha256:e5ef30fa508e6f3a028a4e26acc7ec2803eea1370dc9c1da692ee0405cdaf50d",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://b46cc718320c94093cf0f4f6cca233335210ef1a8685c12a2a53895fefa39ebd",
                                "exitCode": 2,
                                "finishedAt": "2023-04-11T09:43:55Z",
                                "reason": "Error",
                                "startedAt": "2023-04-11T09:43:44Z"
                            }
                        },
                        "name": "etcd",
                        "ready": false,
                        "restartCount": 343,
                        "started": false,
                        "state": {
                            "waiting": {
                                "message": "back-off 5m0s restarting failed container=etcd pod=apisix-etcd-1_default(ebb551d1-c8fc-400c-aeda-314cfda1e1b1)",
                                "reason": "CrashLoopBackOff"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.49.2",
                "phase": "Running",
                "podIP": "172.17.0.22",
                "podIPs": [
                    {
                        "ip": "172.17.0.22"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-04-10T04:08:50Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "checksum/token-secret": "1ad535461d73161af0c2758bcd5d123827b74f7c0020e76bc2d082f653651f81"
                },
                "creationTimestamp": "2023-04-10T04:08:54Z",
                "generateName": "apisix-etcd-",
                "labels": {
                    "app.kubernetes.io/instance": "apisix",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "etcd",
                    "controller-revision-hash": "apisix-etcd-c58467596",
                    "helm.sh/chart": "etcd-8.3.4",
                    "statefulset.kubernetes.io/pod-name": "apisix-etcd-2"
                },
                "name": "apisix-etcd-2",
                "namespace": "default",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "apisix-etcd",
                        "uid": "2fb4d7b1-6f76-42dc-8cd6-ba519b06a6b2"
                    }
                ],
                "resourceVersion": "21253579",
                "uid": "230cf04a-919f-4f34-8431-ff9e2e23c034"
            },
            "spec": {
                "affinity": {
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchLabels": {
                                            "app.kubernetes.io/instance": "apisix",
                                            "app.kubernetes.io/name": "etcd"
                                        }
                                    },
                                    "namespaces": [
                                        "default"
                                    ],
                                    "topologyKey": "kubernetes.io/hostname"
                                },
                                "weight": 1
                            }
                        ]
                    }
                },
                "containers": [
                    {
                        "env": [
                            {
                                "name": "BITNAMI_DEBUG",
                                "value": "false"
                            },
                            {
                                "name": "MY_POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "MY_POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "MY_STS_NAME",
                                "value": "apisix-etcd"
                            },
                            {
                                "name": "ETCDCTL_API",
                                "value": "3"
                            },
                            {
                                "name": "ETCD_ON_K8S",
                                "value": "yes"
                            },
                            {
                                "name": "ETCD_START_FROM_SNAPSHOT",
                                "value": "no"
                            },
                            {
                                "name": "ETCD_DISASTER_RECOVERY",
                                "value": "no"
                            },
                            {
                                "name": "ETCD_NAME",
                                "value": "$(MY_POD_NAME)"
                            },
                            {
                                "name": "ETCD_DATA_DIR",
                                "value": "/bitnami/etcd/data"
                            },
                            {
                                "name": "ETCD_LOG_LEVEL",
                                "value": "info"
                            },
                            {
                                "name": "ALLOW_NONE_AUTHENTICATION",
                                "value": "yes"
                            },
                            {
                                "name": "ETCD_AUTH_TOKEN",
                                "value": "jwt,priv-key=/opt/bitnami/etcd/certs/token/jwt-token.pem,sign-method=RS256,ttl=10m"
                            },
                            {
                                "name": "ETCD_ADVERTISE_CLIENT_URLS",
                                "value": "http://$(MY_POD_NAME).apisix-etcd-headless.default.svc.cluster.local:2379,http://apisix-etcd.default.svc.cluster.local:2379"
                            },
                            {
                                "name": "ETCD_LISTEN_CLIENT_URLS",
                                "value": "http://0.0.0.0:2379"
                            },
                            {
                                "name": "ETCD_INITIAL_ADVERTISE_PEER_URLS",
                                "value": "http://$(MY_POD_NAME).apisix-etcd-headless.default.svc.cluster.local:2380"
                            },
                            {
                                "name": "ETCD_LISTEN_PEER_URLS",
                                "value": "http://0.0.0.0:2380"
                            },
                            {
                                "name": "ETCD_INITIAL_CLUSTER_TOKEN",
                                "value": "etcd-cluster-k8s"
                            },
                            {
                                "name": "ETCD_INITIAL_CLUSTER_STATE",
                                "value": "new"
                            },
                            {
                                "name": "ETCD_INITIAL_CLUSTER",
                                "value": "apisix-etcd-0=http://apisix-etcd-0.apisix-etcd-headless.default.svc.cluster.local:2380,apisix-etcd-1=http://apisix-etcd-1.apisix-etcd-headless.default.svc.cluster.local:2380,apisix-etcd-2=http://apisix-etcd-2.apisix-etcd-headless.default.svc.cluster.local:2380"
                            },
                            {
                                "name": "ETCD_CLUSTER_DOMAIN",
                                "value": "apisix-etcd-headless.default.svc.cluster.local"
                            }
                        ],
                        "image": "docker.io/bitnami/etcd:3.5.4-debian-11-r14",
                        "imagePullPolicy": "IfNotPresent",
                        "lifecycle": {
                            "preStop": {
                                "exec": {
                                    "command": [
                                        "/opt/bitnami/scripts/etcd/prestop.sh"
                                    ]
                                }
                            }
                        },
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/opt/bitnami/scripts/etcd/healthcheck.sh"
                                ]
                            },
                            "failureThreshold": 5,
                            "initialDelaySeconds": 60,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "etcd",
                        "ports": [
                            {
                                "containerPort": 2379,
                                "name": "client",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 2380,
                                "name": "peer",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    "/opt/bitnami/scripts/etcd/healthcheck.sh"
                                ]
                            },
                            "failureThreshold": 5,
                            "initialDelaySeconds": 60,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {},
                        "securityContext": {
                            "runAsNonRoot": true,
                            "runAsUser": 1001
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/bitnami/etcd",
                                "name": "data"
                            },
                            {
                                "mountPath": "/opt/bitnami/etcd/certs/token/",
                                "name": "etcd-jwt-token",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-m2rp2",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "apisix-etcd-2",
                "nodeName": "minikube",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "fsGroup": 1001
                },
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "subdomain": "apisix-etcd-headless",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "data",
                        "persistentVolumeClaim": {
                            "claimName": "data-apisix-etcd-2"
                        }
                    },
                    {
                        "name": "etcd-jwt-token",
                        "secret": {
                            "defaultMode": 256,
                            "secretName": "apisix-etcd-jwt-token"
                        }
                    },
                    {
                        "name": "kube-api-access-m2rp2",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-10T04:08:54Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:48:10Z",
                        "message": "containers with unready status: [etcd]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:48:10Z",
                        "message": "containers with unready status: [etcd]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-10T04:08:54Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://bd7e3ae548896553d4a5f86613f8a232662401d537a9ef061319ce08e73e9ca2",
                        "image": "bitnami/etcd:3.5.4-debian-11-r14",
                        "imageID": "docker-pullable://bitnami/etcd@sha256:e5ef30fa508e6f3a028a4e26acc7ec2803eea1370dc9c1da692ee0405cdaf50d",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://bd7e3ae548896553d4a5f86613f8a232662401d537a9ef061319ce08e73e9ca2",
                                "exitCode": 2,
                                "finishedAt": "2023-04-11T09:44:24Z",
                                "reason": "Error",
                                "startedAt": "2023-04-11T09:44:14Z"
                            }
                        },
                        "name": "etcd",
                        "ready": false,
                        "restartCount": 344,
                        "started": false,
                        "state": {
                            "waiting": {
                                "message": "back-off 5m0s restarting failed container=etcd pod=apisix-etcd-2_default(230cf04a-919f-4f34-8431-ff9e2e23c034)",
                                "reason": "CrashLoopBackOff"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.49.2",
                "phase": "Running",
                "podIP": "172.17.0.24",
                "podIPs": [
                    {
                        "ip": "172.17.0.24"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-04-10T04:08:54Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "checksum/config": "6bac36582b56963dbc2cc7a9761ebe7a2f874ca65d07c45e9cc15a2c5d1e45d3"
                },
                "creationTimestamp": "2022-11-15T03:10:06Z",
                "generateName": "apisix-ingress-controller-6ccdb9c8fc-",
                "labels": {
                    "app.kubernetes.io/instance": "apisix",
                    "app.kubernetes.io/name": "ingress-controller",
                    "pod-template-hash": "6ccdb9c8fc"
                },
                "name": "apisix-ingress-controller-6ccdb9c8fc-css8c",
                "namespace": "default",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "apisix-ingress-controller-6ccdb9c8fc",
                        "uid": "791a4265-d2f4-479c-8bd2-20b091957578"
                    }
                ],
                "resourceVersion": "21243961",
                "uid": "1230853d-7ab3-4778-bc52-f4cfb031063c"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "/ingress-apisix/apisix-ingress-controller",
                            "ingress",
                            "--config-path",
                            "/ingress-apisix/conf/config.yaml"
                        ],
                        "env": [
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            }
                        ],
                        "image": "apache/apisix-ingress-controller:1.5.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "ingress-controller",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/ingress-apisix/conf",
                                "name": "configuration"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-kgct9",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "initContainers": [
                    {
                        "command": [
                            "sh",
                            "-c",
                            "until nc -z apisix-admin.ingress-apisix.svc.cluster.local 9180 ; do echo waiting for apisix-admin; sleep 2; done;"
                        ],
                        "image": "busybox:1.28",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "wait-apisix-admin",
                        "resources": {},
                        "securityContext": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-kgct9",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "minikube",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "apisix-ingress-controller",
                "serviceAccountName": "apisix-ingress-controller",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "config.yaml",
                                    "path": "config.yaml"
                                }
                            ],
                            "name": "apisix-configmap"
                        },
                        "name": "configuration"
                    },
                    {
                        "name": "kube-api-access-kgct9",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-15T03:10:06Z",
                        "message": "containers with incomplete status: [wait-apisix-admin]",
                        "reason": "ContainersNotInitialized",
                        "status": "False",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-15T03:10:06Z",
                        "message": "containers with unready status: [ingress-controller]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-15T03:10:06Z",
                        "message": "containers with unready status: [ingress-controller]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-15T03:10:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "image": "apache/apisix-ingress-controller:1.5.0",
                        "imageID": "",
                        "lastState": {},
                        "name": "ingress-controller",
                        "ready": false,
                        "restartCount": 0,
                        "started": false,
                        "state": {
                            "waiting": {
                                "reason": "PodInitializing"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.49.2",
                "initContainerStatuses": [
                    {
                        "containerID": "docker://b7ee38527da1d2a96b281ffa1e5f5c21049d5d001e74c4f006920621792bfca0",
                        "image": "busybox:1.28",
                        "imageID": "docker-pullable://busybox@sha256:141c253bc4c3fd0a201d32dc1f493bcf3fff003b6df416dea4f41046e0f37d47",
                        "lastState": {},
                        "name": "wait-apisix-admin",
                        "ready": false,
                        "restartCount": 6,
                        "state": {
                            "running": {
                                "startedAt": "2023-04-11T08:47:17Z"
                            }
                        }
                    }
                ],
                "phase": "Pending",
                "podIP": "172.17.0.20",
                "podIPs": [
                    {
                        "ip": "172.17.0.20"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2022-11-15T03:10:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"annotations\":{},\"name\":\"dnsutils\",\"namespace\":\"default\"},\"spec\":{\"containers\":[{\"command\":[\"sleep\",\"infinity\"],\"image\":\"registry.k8s.io/e2e-test-images/jessie-dnsutils:1.3\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"dnsutils\"}],\"restartPolicy\":\"Always\"}}\n"
                },
                "creationTimestamp": "2022-11-15T13:05:18Z",
                "name": "dnsutils",
                "namespace": "default",
                "resourceVersion": "21244049",
                "uid": "0e0ca13b-a9dc-4bfe-a832-464448d6e0e5"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "sleep",
                            "infinity"
                        ],
                        "image": "registry.k8s.io/e2e-test-images/jessie-dnsutils:1.3",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "dnsutils",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-gf27z",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "minikube",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "kube-api-access-gf27z",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-15T13:05:18Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-10T03:52:44Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-10T03:52:44Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-15T13:05:18Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://085c1ce8db96b3623472ac6cc59b3b8f5a2accccdffd410b544e3ddec1aaa2c0",
                        "image": "registry.k8s.io/e2e-test-images/jessie-dnsutils:1.3",
                        "imageID": "docker-pullable://registry.k8s.io/e2e-test-images/jessie-dnsutils@sha256:8b03e4185ecd305bc9b410faac15d486a3b1ef1946196d429245cdd3c7b152eb",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://968499e86f8c8f9f00352800b562f93c54c645f32a0ff0de9b290c152593a622",
                                "exitCode": 137,
                                "finishedAt": "2023-04-11T08:46:48Z",
                                "reason": "Error",
                                "startedAt": "2023-04-10T03:52:28Z"
                            }
                        },
                        "name": "dnsutils",
                        "ready": true,
                        "restartCount": 5,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-04-11T08:47:12Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.49.2",
                "phase": "Running",
                "podIP": "172.17.0.9",
                "podIPs": [
                    {
                        "ip": "172.17.0.9"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2022-11-15T13:05:18Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2023-04-10T07:13:25Z",
                "generateName": "my-daemonset-",
                "labels": {
                    "app": "my-daemonset",
                    "controller-revision-hash": "fd7f6c4bb",
                    "pod-template-generation": "1"
                },
                "name": "my-daemonset-b8c79",
                "namespace": "default",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "my-daemonset",
                        "uid": "cf938a00-2870-4220-b95e-766a531c27b8"
                    }
                ],
                "resourceVersion": "21253671",
                "uid": "4864731f-be3c-4460-9559-8ac54f39fcde"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "minikube"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "command": [
                            "/bin/sh",
                            "-c",
                            "echo 'Hello, world!'"
                        ],
                        "image": "alpine:3.14",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "my-container",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-t4z7t",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "minikube",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "name": "kube-api-access-t4z7t",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-10T07:13:25Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-10T07:13:25Z",
                        "message": "containers with unready status: [my-container]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-10T07:13:25Z",
                        "message": "containers with unready status: [my-container]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-10T07:13:25Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://36913a06d8de2cf6119dc1dbe5e8b731f93bb8582326853a545e8b0bf1529249",
                        "image": "alpine:3.14",
                        "imageID": "docker-pullable://alpine@sha256:0f2d5c38dd7a4f4f733e688e3a6733cb5ab1ac6e3cb4603a5dd564e5bfb80eed",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://36913a06d8de2cf6119dc1dbe5e8b731f93bb8582326853a545e8b0bf1529249",
                                "exitCode": 0,
                                "finishedAt": "2023-04-11T09:44:56Z",
                                "reason": "Completed",
                                "startedAt": "2023-04-11T09:44:56Z"
                            }
                        },
                        "name": "my-container",
                        "ready": false,
                        "restartCount": 320,
                        "started": false,
                        "state": {
                            "waiting": {
                                "message": "back-off 5m0s restarting failed container=my-container pod=my-daemonset-b8c79_default(4864731f-be3c-4460-9559-8ac54f39fcde)",
                                "reason": "CrashLoopBackOff"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.49.2",
                "phase": "Running",
                "podIP": "172.17.0.4",
                "podIPs": [
                    {
                        "ip": "172.17.0.4"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-04-10T07:13:25Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "nebula-graph.io/cm-hash": "04feb265f1f203a2"
                },
                "creationTimestamp": "2022-11-14T09:46:19Z",
                "generateName": "nebula-graphd-",
                "labels": {
                    "app.kubernetes.io/cluster": "nebula",
                    "app.kubernetes.io/component": "graphd",
                    "app.kubernetes.io/managed-by": "nebula-operator",
                    "app.kubernetes.io/name": "nebula-graph",
                    "controller-revision-hash": "nebula-graphd-85cd966c8",
                    "statefulset.kubernetes.io/pod-name": "nebula-graphd-0"
                },
                "name": "nebula-graphd-0",
                "namespace": "default",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "nebula-graphd",
                        "uid": "77af597a-2186-4beb-af50-6d20e0eff2b8"
                    }
                ],
                "resourceVersion": "21244153",
                "uid": "74f49fde-53f1-4517-887e-2b00cdb21896"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "/bin/bash",
                            "-ecx",
                            "exec /usr/local/nebula/bin/nebula-graphd --flagfile=/usr/local/nebula/etc/nebula-graphd.conf --meta_server_addrs=nebula-metad-0.nebula-metad-headless.default.svc.cluster.local:9559 --local_ip=$(hostname).nebula-graphd-svc.default.svc.cluster.local --ws_ip=$(hostname).nebula-graphd-svc.default.svc.cluster.local --daemonize=false"
                        ],
                        "image": "vesoft/nebula-graphd:v3.1.0",
                        "imagePullPolicy": "Always",
                        "name": "graphd",
                        "ports": [
                            {
                                "containerPort": 9669,
                                "name": "thrift",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 19669,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 19670,
                                "name": "http2",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/status",
                                "port": 19669,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {
                            "limits": {
                                "cpu": "1",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "1m",
                                "memory": "20Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/usr/local/nebula/logs",
                                "name": "graphd-log",
                                "subPath": "logs"
                            },
                            {
                                "mountPath": "/usr/local/nebula/etc",
                                "name": "nebula-graphd"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-dzz9v",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "nebula-graphd-0",
                "nodeName": "minikube",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "subdomain": "nebula-graphd-svc",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "topologySpreadConstraints": [
                    {
                        "labelSelector": {
                            "matchLabels": {
                                "app.kubernetes.io/cluster": "nebula",
                                "app.kubernetes.io/component": "graphd",
                                "app.kubernetes.io/managed-by": "nebula-operator",
                                "app.kubernetes.io/name": "nebula-graph"
                            }
                        },
                        "maxSkew": 1,
                        "topologyKey": "kubernetes.io/hostname",
                        "whenUnsatisfiable": "ScheduleAnyway"
                    }
                ],
                "volumes": [
                    {
                        "name": "graphd-log",
                        "persistentVolumeClaim": {
                            "claimName": "graphd-log-nebula-graphd-0"
                        }
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "nebula-graphd.conf",
                                    "path": "nebula-graphd.conf"
                                }
                            ],
                            "name": "nebula-graphd"
                        },
                        "name": "nebula-graphd"
                    },
                    {
                        "name": "kube-api-access-dzz9v",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-14T09:46:21Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:48:19Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:48:19Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-14T09:46:21Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://8df494971cb689127bd5aecf0b1cd789076d5633bd5d07310be881fb327ab03f",
                        "image": "vesoft/nebula-graphd:v3.1.0",
                        "imageID": "docker-pullable://vesoft/nebula-graphd@sha256:b9b67411370c941beebfc9e82efbb85723a40a07f189710e3410082835430be3",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://d14b6d911dccf97cdd0f2ba9a4d64942e2d7ef53cbb4e5f0a2ba2610215e0448",
                                "exitCode": 0,
                                "finishedAt": "2023-04-11T08:46:41Z",
                                "reason": "Completed",
                                "startedAt": "2023-04-10T03:53:03Z"
                            }
                        },
                        "name": "graphd",
                        "ready": true,
                        "restartCount": 6,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-04-11T08:47:30Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.49.2",
                "phase": "Running",
                "podIP": "172.17.0.8",
                "podIPs": [
                    {
                        "ip": "172.17.0.8"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2022-11-14T09:46:21Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "nebula-graph.io/cm-hash": "04feb265f1f203a2"
                },
                "creationTimestamp": "2022-11-16T09:00:37Z",
                "generateName": "nebula-graphd-",
                "labels": {
                    "app.kubernetes.io/cluster": "nebula",
                    "app.kubernetes.io/component": "graphd",
                    "app.kubernetes.io/managed-by": "nebula-operator",
                    "app.kubernetes.io/name": "nebula-graph",
                    "controller-revision-hash": "nebula-graphd-85cd966c8",
                    "statefulset.kubernetes.io/pod-name": "nebula-graphd-1"
                },
                "name": "nebula-graphd-1",
                "namespace": "default",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "nebula-graphd",
                        "uid": "77af597a-2186-4beb-af50-6d20e0eff2b8"
                    }
                ],
                "resourceVersion": "21244137",
                "uid": "727d0b79-8096-4ab7-8c6a-6cd473214192"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "/bin/bash",
                            "-ecx",
                            "exec /usr/local/nebula/bin/nebula-graphd --flagfile=/usr/local/nebula/etc/nebula-graphd.conf --meta_server_addrs=nebula-metad-0.nebula-metad-headless.default.svc.cluster.local:9559 --local_ip=$(hostname).nebula-graphd-svc.default.svc.cluster.local --ws_ip=$(hostname).nebula-graphd-svc.default.svc.cluster.local --daemonize=false"
                        ],
                        "image": "vesoft/nebula-graphd:v3.1.0",
                        "imagePullPolicy": "Always",
                        "name": "graphd",
                        "ports": [
                            {
                                "containerPort": 9669,
                                "name": "thrift",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 19669,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 19670,
                                "name": "http2",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/status",
                                "port": 19669,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {
                            "limits": {
                                "cpu": "1",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "1m",
                                "memory": "20Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/usr/local/nebula/logs",
                                "name": "graphd-log",
                                "subPath": "logs"
                            },
                            {
                                "mountPath": "/usr/local/nebula/etc",
                                "name": "nebula-graphd"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-bgn84",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "nebula-graphd-1",
                "nodeName": "minikube",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "subdomain": "nebula-graphd-svc",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "topologySpreadConstraints": [
                    {
                        "labelSelector": {
                            "matchLabels": {
                                "app.kubernetes.io/cluster": "nebula",
                                "app.kubernetes.io/component": "graphd",
                                "app.kubernetes.io/managed-by": "nebula-operator",
                                "app.kubernetes.io/name": "nebula-graph"
                            }
                        },
                        "maxSkew": 1,
                        "topologyKey": "kubernetes.io/hostname",
                        "whenUnsatisfiable": "ScheduleAnyway"
                    }
                ],
                "volumes": [
                    {
                        "name": "graphd-log",
                        "persistentVolumeClaim": {
                            "claimName": "graphd-log-nebula-graphd-1"
                        }
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "nebula-graphd.conf",
                                    "path": "nebula-graphd.conf"
                                }
                            ],
                            "name": "nebula-graphd"
                        },
                        "name": "nebula-graphd"
                    },
                    {
                        "name": "kube-api-access-bgn84",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-16T09:00:39Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:48:06Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:48:06Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-16T09:00:39Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://d96928eb347aaee0eed7b346794177370a34ffab9f2d84cd2201c2d0aa3b690a",
                        "image": "vesoft/nebula-graphd:v3.1.0",
                        "imageID": "docker-pullable://vesoft/nebula-graphd@sha256:b9b67411370c941beebfc9e82efbb85723a40a07f189710e3410082835430be3",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://bd4fd68c04d22bd37d1b98af5d199d8545e55c29928793be3e0805e30a4c1300",
                                "exitCode": 0,
                                "finishedAt": "2023-04-11T08:46:41Z",
                                "reason": "Completed",
                                "startedAt": "2023-04-10T03:53:22Z"
                            }
                        },
                        "name": "graphd",
                        "ready": true,
                        "restartCount": 4,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-04-11T08:47:24Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.49.2",
                "phase": "Running",
                "podIP": "172.17.0.2",
                "podIPs": [
                    {
                        "ip": "172.17.0.2"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2022-11-16T09:00:39Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "nebula-graph.io/cm-hash": "d6d215628f9203cb"
                },
                "creationTimestamp": "2022-11-14T09:45:17Z",
                "generateName": "nebula-metad-",
                "labels": {
                    "app.kubernetes.io/cluster": "nebula",
                    "app.kubernetes.io/component": "metad",
                    "app.kubernetes.io/managed-by": "nebula-operator",
                    "app.kubernetes.io/name": "nebula-graph",
                    "controller-revision-hash": "nebula-metad-fb546b55",
                    "statefulset.kubernetes.io/pod-name": "nebula-metad-0"
                },
                "name": "nebula-metad-0",
                "namespace": "default",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "nebula-metad",
                        "uid": "576c39f3-dc11-40e1-acff-c1ea63de871f"
                    }
                ],
                "resourceVersion": "21244154",
                "uid": "9b731573-108f-401e-b331-31eefa5f9793"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "/bin/bash",
                            "-ecx",
                            "exec /usr/local/nebula/bin/nebula-metad --flagfile=/usr/local/nebula/etc/nebula-metad.conf --meta_server_addrs=nebula-metad-0.nebula-metad-headless.default.svc.cluster.local:9559 --local_ip=$(hostname).nebula-metad-headless.default.svc.cluster.local --ws_ip=$(hostname).nebula-metad-headless.default.svc.cluster.local --daemonize=false"
                        ],
                        "image": "vesoft/nebula-metad:v3.1.0",
                        "imagePullPolicy": "Always",
                        "name": "metad",
                        "ports": [
                            {
                                "containerPort": 9559,
                                "name": "thrift",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 19559,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 19560,
                                "name": "http2",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/status",
                                "port": 19559,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {
                            "limits": {
                                "cpu": "1",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "1m",
                                "memory": "20Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/usr/local/nebula/logs",
                                "name": "metad-log",
                                "subPath": "logs"
                            },
                            {
                                "mountPath": "/usr/local/nebula/data",
                                "name": "metad-data",
                                "subPath": "data"
                            },
                            {
                                "mountPath": "/usr/local/nebula/etc",
                                "name": "nebula-metad"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-4f5qj",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "nebula-metad-0",
                "nodeName": "minikube",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "subdomain": "nebula-metad-headless",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "topologySpreadConstraints": [
                    {
                        "labelSelector": {
                            "matchLabels": {
                                "app.kubernetes.io/cluster": "nebula",
                                "app.kubernetes.io/component": "metad",
                                "app.kubernetes.io/managed-by": "nebula-operator",
                                "app.kubernetes.io/name": "nebula-graph"
                            }
                        },
                        "maxSkew": 1,
                        "topologyKey": "kubernetes.io/hostname",
                        "whenUnsatisfiable": "ScheduleAnyway"
                    }
                ],
                "volumes": [
                    {
                        "name": "metad-log",
                        "persistentVolumeClaim": {
                            "claimName": "metad-log-nebula-metad-0"
                        }
                    },
                    {
                        "name": "metad-data",
                        "persistentVolumeClaim": {
                            "claimName": "metad-data-nebula-metad-0"
                        }
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "nebula-metad.conf",
                                    "path": "nebula-metad.conf"
                                }
                            ],
                            "name": "nebula-metad"
                        },
                        "name": "nebula-metad"
                    },
                    {
                        "name": "kube-api-access-4f5qj",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-14T09:45:18Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:48:25Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:48:25Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-14T09:45:18Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://4da8f94c7854d8773ca9b9d04fa79b092853c954fbfb12f9253e2c61d5d75126",
                        "image": "vesoft/nebula-metad:v3.1.0",
                        "imageID": "docker-pullable://vesoft/nebula-metad@sha256:cb044db5a2d5df76c3308c6003a637f814939203969b13e98a4379d6e36d3670",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://7677eeb76886ba97cb7f221238f44684ec20827f4889abc82a42cd344cf6a904",
                                "exitCode": 0,
                                "finishedAt": "2023-04-11T08:46:42Z",
                                "reason": "Completed",
                                "startedAt": "2023-04-10T03:52:54Z"
                            }
                        },
                        "name": "metad",
                        "ready": true,
                        "restartCount": 6,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-04-11T08:48:13Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.49.2",
                "phase": "Running",
                "podIP": "172.17.0.18",
                "podIPs": [
                    {
                        "ip": "172.17.0.18"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2022-11-14T09:45:18Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "nebula-graph.io/cm-hash": "28d0b1df3f72093c"
                },
                "creationTimestamp": "2022-11-14T09:46:18Z",
                "generateName": "nebula-storaged-",
                "labels": {
                    "app.kubernetes.io/cluster": "nebula",
                    "app.kubernetes.io/component": "storaged",
                    "app.kubernetes.io/managed-by": "nebula-operator",
                    "app.kubernetes.io/name": "nebula-graph",
                    "controller-revision-hash": "nebula-storaged-7ff48f65fd",
                    "statefulset.kubernetes.io/pod-name": "nebula-storaged-0"
                },
                "name": "nebula-storaged-0",
                "namespace": "default",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "nebula-storaged",
                        "uid": "692c5937-eec9-4dcb-b51f-c32a697aded2"
                    }
                ],
                "resourceVersion": "21244383",
                "uid": "5aa2cef5-e486-4501-89b1-efd3f5cd6798"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "/bin/bash",
                            "-ecx",
                            "exec /usr/local/nebula/bin/nebula-storaged --flagfile=/usr/local/nebula/etc/nebula-storaged.conf --meta_server_addrs=nebula-metad-0.nebula-metad-headless.default.svc.cluster.local:9559 --local_ip=$(hostname).nebula-storaged-headless.default.svc.cluster.local --ws_ip=$(hostname).nebula-storaged-headless.default.svc.cluster.local --daemonize=false"
                        ],
                        "image": "vesoft/nebula-storaged:v3.1.0",
                        "imagePullPolicy": "Always",
                        "name": "storaged",
                        "ports": [
                            {
                                "containerPort": 9779,
                                "name": "thrift",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 19779,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 19780,
                                "name": "http2",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 9778,
                                "name": "admin",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/status",
                                "port": 19779,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {
                            "limits": {
                                "cpu": "1",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "1m",
                                "memory": "20Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/usr/local/nebula/logs",
                                "name": "storaged-log",
                                "subPath": "logs"
                            },
                            {
                                "mountPath": "/usr/local/nebula/data",
                                "name": "storaged-data",
                                "subPath": "data"
                            },
                            {
                                "mountPath": "/usr/local/nebula/etc",
                                "name": "nebula-storaged"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-4wbhn",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "nebula-storaged-0",
                "nodeName": "minikube",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "subdomain": "nebula-storaged-headless",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "topologySpreadConstraints": [
                    {
                        "labelSelector": {
                            "matchLabels": {
                                "app.kubernetes.io/cluster": "nebula",
                                "app.kubernetes.io/component": "storaged",
                                "app.kubernetes.io/managed-by": "nebula-operator",
                                "app.kubernetes.io/name": "nebula-graph"
                            }
                        },
                        "maxSkew": 1,
                        "topologyKey": "kubernetes.io/hostname",
                        "whenUnsatisfiable": "ScheduleAnyway"
                    }
                ],
                "volumes": [
                    {
                        "name": "storaged-log",
                        "persistentVolumeClaim": {
                            "claimName": "storaged-log-nebula-storaged-0"
                        }
                    },
                    {
                        "name": "storaged-data",
                        "persistentVolumeClaim": {
                            "claimName": "storaged-data-nebula-storaged-0"
                        }
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "nebula-storaged.conf",
                                    "path": "nebula-storaged.conf"
                                }
                            ],
                            "name": "nebula-storaged"
                        },
                        "name": "nebula-storaged"
                    },
                    {
                        "name": "kube-api-access-4wbhn",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-14T09:46:20Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:49:27Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:49:27Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-14T09:46:19Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://acabd809ccfbdfd456b1d37bad472d34f44607edcb8be7890df1a49ec52e4caa",
                        "image": "vesoft/nebula-storaged:v3.1.0",
                        "imageID": "docker-pullable://vesoft/nebula-storaged@sha256:d74f9bc8f26597d5e0ab11a6c52a968a7801acbc6f14895cfa849bce7a2b8171",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://df78cd57caa2cf4f416c6cc54f29ba1052e7b68f5fc70cc9daaac3eeae676551",
                                "exitCode": 0,
                                "finishedAt": "2023-04-11T08:46:41Z",
                                "reason": "Completed",
                                "startedAt": "2023-04-10T03:52:59Z"
                            }
                        },
                        "name": "storaged",
                        "ready": true,
                        "restartCount": 6,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-04-11T08:47:18Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.49.2",
                "phase": "Running",
                "podIP": "172.17.0.6",
                "podIPs": [
                    {
                        "ip": "172.17.0.6"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2022-11-14T09:46:20Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "nebula-graph.io/cm-hash": "28d0b1df3f72093c"
                },
                "creationTimestamp": "2022-11-14T09:46:18Z",
                "generateName": "nebula-storaged-",
                "labels": {
                    "app.kubernetes.io/cluster": "nebula",
                    "app.kubernetes.io/component": "storaged",
                    "app.kubernetes.io/managed-by": "nebula-operator",
                    "app.kubernetes.io/name": "nebula-graph",
                    "controller-revision-hash": "nebula-storaged-7ff48f65fd",
                    "statefulset.kubernetes.io/pod-name": "nebula-storaged-1"
                },
                "name": "nebula-storaged-1",
                "namespace": "default",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "nebula-storaged",
                        "uid": "692c5937-eec9-4dcb-b51f-c32a697aded2"
                    }
                ],
                "resourceVersion": "21244358",
                "uid": "ed0263e3-08ee-4498-9cea-f5175f597022"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "/bin/bash",
                            "-ecx",
                            "exec /usr/local/nebula/bin/nebula-storaged --flagfile=/usr/local/nebula/etc/nebula-storaged.conf --meta_server_addrs=nebula-metad-0.nebula-metad-headless.default.svc.cluster.local:9559 --local_ip=$(hostname).nebula-storaged-headless.default.svc.cluster.local --ws_ip=$(hostname).nebula-storaged-headless.default.svc.cluster.local --daemonize=false"
                        ],
                        "image": "vesoft/nebula-storaged:v3.1.0",
                        "imagePullPolicy": "Always",
                        "name": "storaged",
                        "ports": [
                            {
                                "containerPort": 9779,
                                "name": "thrift",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 19779,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 19780,
                                "name": "http2",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 9778,
                                "name": "admin",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/status",
                                "port": 19779,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {
                            "limits": {
                                "cpu": "1",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "1m",
                                "memory": "20Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/usr/local/nebula/logs",
                                "name": "storaged-log",
                                "subPath": "logs"
                            },
                            {
                                "mountPath": "/usr/local/nebula/data",
                                "name": "storaged-data",
                                "subPath": "data"
                            },
                            {
                                "mountPath": "/usr/local/nebula/etc",
                                "name": "nebula-storaged"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-brvc4",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "nebula-storaged-1",
                "nodeName": "minikube",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "subdomain": "nebula-storaged-headless",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "topologySpreadConstraints": [
                    {
                        "labelSelector": {
                            "matchLabels": {
                                "app.kubernetes.io/cluster": "nebula",
                                "app.kubernetes.io/component": "storaged",
                                "app.kubernetes.io/managed-by": "nebula-operator",
                                "app.kubernetes.io/name": "nebula-graph"
                            }
                        },
                        "maxSkew": 1,
                        "topologyKey": "kubernetes.io/hostname",
                        "whenUnsatisfiable": "ScheduleAnyway"
                    }
                ],
                "volumes": [
                    {
                        "name": "storaged-log",
                        "persistentVolumeClaim": {
                            "claimName": "storaged-log-nebula-storaged-1"
                        }
                    },
                    {
                        "name": "storaged-data",
                        "persistentVolumeClaim": {
                            "claimName": "storaged-data-nebula-storaged-1"
                        }
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "nebula-storaged.conf",
                                    "path": "nebula-storaged.conf"
                                }
                            ],
                            "name": "nebula-storaged"
                        },
                        "name": "nebula-storaged"
                    },
                    {
                        "name": "kube-api-access-brvc4",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-14T09:46:21Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:49:21Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:49:21Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-14T09:46:21Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://b793117b6f92eecf6326bb01efa32d0f2850d2e4ff26397219ed5b6d5b17e003",
                        "image": "vesoft/nebula-storaged:v3.1.0",
                        "imageID": "docker-pullable://vesoft/nebula-storaged@sha256:d74f9bc8f26597d5e0ab11a6c52a968a7801acbc6f14895cfa849bce7a2b8171",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://9d0ab6ba74aebb58500a2bc7bb5c2e875d8b80c31017b0b64a10be9991d6cfe4",
                                "exitCode": 0,
                                "finishedAt": "2023-04-11T08:46:41Z",
                                "reason": "Completed",
                                "startedAt": "2023-04-10T03:52:42Z"
                            }
                        },
                        "name": "storaged",
                        "ready": true,
                        "restartCount": 6,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-04-11T08:48:35Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.49.2",
                "phase": "Running",
                "podIP": "172.17.0.21",
                "podIPs": [
                    {
                        "ip": "172.17.0.21"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2022-11-14T09:46:21Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "nebula-graph.io/cm-hash": "28d0b1df3f72093c"
                },
                "creationTimestamp": "2022-11-14T09:46:19Z",
                "generateName": "nebula-storaged-",
                "labels": {
                    "app.kubernetes.io/cluster": "nebula",
                    "app.kubernetes.io/component": "storaged",
                    "app.kubernetes.io/managed-by": "nebula-operator",
                    "app.kubernetes.io/name": "nebula-graph",
                    "controller-revision-hash": "nebula-storaged-7ff48f65fd",
                    "statefulset.kubernetes.io/pod-name": "nebula-storaged-2"
                },
                "name": "nebula-storaged-2",
                "namespace": "default",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "nebula-storaged",
                        "uid": "692c5937-eec9-4dcb-b51f-c32a697aded2"
                    }
                ],
                "resourceVersion": "21244395",
                "uid": "686771de-235d-4749-963c-91caf50f7b8c"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "/bin/bash",
                            "-ecx",
                            "exec /usr/local/nebula/bin/nebula-storaged --flagfile=/usr/local/nebula/etc/nebula-storaged.conf --meta_server_addrs=nebula-metad-0.nebula-metad-headless.default.svc.cluster.local:9559 --local_ip=$(hostname).nebula-storaged-headless.default.svc.cluster.local --ws_ip=$(hostname).nebula-storaged-headless.default.svc.cluster.local --daemonize=false"
                        ],
                        "image": "vesoft/nebula-storaged:v3.1.0",
                        "imagePullPolicy": "Always",
                        "name": "storaged",
                        "ports": [
                            {
                                "containerPort": 9779,
                                "name": "thrift",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 19779,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 19780,
                                "name": "http2",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 9778,
                                "name": "admin",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/status",
                                "port": 19779,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {
                            "limits": {
                                "cpu": "1",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "1m",
                                "memory": "20Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/usr/local/nebula/logs",
                                "name": "storaged-log",
                                "subPath": "logs"
                            },
                            {
                                "mountPath": "/usr/local/nebula/data",
                                "name": "storaged-data",
                                "subPath": "data"
                            },
                            {
                                "mountPath": "/usr/local/nebula/etc",
                                "name": "nebula-storaged"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-4hk6j",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "nebula-storaged-2",
                "nodeName": "minikube",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "subdomain": "nebula-storaged-headless",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "topologySpreadConstraints": [
                    {
                        "labelSelector": {
                            "matchLabels": {
                                "app.kubernetes.io/cluster": "nebula",
                                "app.kubernetes.io/component": "storaged",
                                "app.kubernetes.io/managed-by": "nebula-operator",
                                "app.kubernetes.io/name": "nebula-graph"
                            }
                        },
                        "maxSkew": 1,
                        "topologyKey": "kubernetes.io/hostname",
                        "whenUnsatisfiable": "ScheduleAnyway"
                    }
                ],
                "volumes": [
                    {
                        "name": "storaged-log",
                        "persistentVolumeClaim": {
                            "claimName": "storaged-log-nebula-storaged-2"
                        }
                    },
                    {
                        "name": "storaged-data",
                        "persistentVolumeClaim": {
                            "claimName": "storaged-data-nebula-storaged-2"
                        }
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "nebula-storaged.conf",
                                    "path": "nebula-storaged.conf"
                                }
                            ],
                            "name": "nebula-storaged"
                        },
                        "name": "nebula-storaged"
                    },
                    {
                        "name": "kube-api-access-4hk6j",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-14T09:46:21Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:49:29Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:49:29Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-14T09:46:21Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://c7f731ba4e6113a2a29f5eb8797d4243912b611baba51a92f201ff78f19af8cb",
                        "image": "vesoft/nebula-storaged:v3.1.0",
                        "imageID": "docker-pullable://vesoft/nebula-storaged@sha256:d74f9bc8f26597d5e0ab11a6c52a968a7801acbc6f14895cfa849bce7a2b8171",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://dccffed5f718f0c943d0f365a06d8809a6471c0077c4feff17d21731f8fd99fb",
                                "exitCode": 0,
                                "finishedAt": "2023-04-11T08:46:41Z",
                                "reason": "Completed",
                                "startedAt": "2023-04-10T03:53:18Z"
                            }
                        },
                        "name": "storaged",
                        "ready": true,
                        "restartCount": 6,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-04-11T08:47:37Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.49.2",
                "phase": "Running",
                "podIP": "172.17.0.12",
                "podIPs": [
                    {
                        "ip": "172.17.0.12"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2022-11-14T09:46:21Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "nebula-graph.io/cm-hash": "28d0b1df3f72093c"
                },
                "creationTimestamp": "2022-12-04T15:27:50Z",
                "generateName": "nebula-storaged-",
                "labels": {
                    "app.kubernetes.io/cluster": "nebula",
                    "app.kubernetes.io/component": "storaged",
                    "app.kubernetes.io/managed-by": "nebula-operator",
                    "app.kubernetes.io/name": "nebula-graph",
                    "controller-revision-hash": "nebula-storaged-7ff48f65fd",
                    "statefulset.kubernetes.io/pod-name": "nebula-storaged-3"
                },
                "name": "nebula-storaged-3",
                "namespace": "default",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "nebula-storaged",
                        "uid": "692c5937-eec9-4dcb-b51f-c32a697aded2"
                    }
                ],
                "resourceVersion": "21244243",
                "uid": "db231e69-7938-409b-9e0c-6f249fff2a69"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "/bin/bash",
                            "-ecx",
                            "exec /usr/local/nebula/bin/nebula-storaged --flagfile=/usr/local/nebula/etc/nebula-storaged.conf --meta_server_addrs=nebula-metad-0.nebula-metad-headless.default.svc.cluster.local:9559 --local_ip=$(hostname).nebula-storaged-headless.default.svc.cluster.local --ws_ip=$(hostname).nebula-storaged-headless.default.svc.cluster.local --daemonize=false"
                        ],
                        "image": "vesoft/nebula-storaged:v3.1.0",
                        "imagePullPolicy": "Always",
                        "name": "storaged",
                        "ports": [
                            {
                                "containerPort": 9779,
                                "name": "thrift",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 19779,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 19780,
                                "name": "http2",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 9778,
                                "name": "admin",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/status",
                                "port": 19779,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {
                            "limits": {
                                "cpu": "1",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "1m",
                                "memory": "20Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/usr/local/nebula/logs",
                                "name": "storaged-log",
                                "subPath": "logs"
                            },
                            {
                                "mountPath": "/usr/local/nebula/data",
                                "name": "storaged-data",
                                "subPath": "data"
                            },
                            {
                                "mountPath": "/usr/local/nebula/etc",
                                "name": "nebula-storaged"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-cffdf",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostname": "nebula-storaged-3",
                "nodeName": "minikube",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "subdomain": "nebula-storaged-headless",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "topologySpreadConstraints": [
                    {
                        "labelSelector": {
                            "matchLabels": {
                                "app.kubernetes.io/cluster": "nebula",
                                "app.kubernetes.io/component": "storaged",
                                "app.kubernetes.io/managed-by": "nebula-operator",
                                "app.kubernetes.io/name": "nebula-graph"
                            }
                        },
                        "maxSkew": 1,
                        "topologyKey": "kubernetes.io/hostname",
                        "whenUnsatisfiable": "ScheduleAnyway"
                    }
                ],
                "volumes": [
                    {
                        "name": "storaged-log",
                        "persistentVolumeClaim": {
                            "claimName": "storaged-log-nebula-storaged-3"
                        }
                    },
                    {
                        "name": "storaged-data",
                        "persistentVolumeClaim": {
                            "claimName": "storaged-data-nebula-storaged-3"
                        }
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "nebula-storaged.conf",
                                    "path": "nebula-storaged.conf"
                                }
                            ],
                            "name": "nebula-storaged"
                        },
                        "name": "nebula-storaged"
                    },
                    {
                        "name": "kube-api-access-cffdf",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-12-04T15:27:51Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:48:53Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:48:53Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-12-04T15:27:51Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://09d616a18d3609afdb7b2bc9ea7a68e91dafbdb2bf0de53ad18934b107bf1389",
                        "image": "vesoft/nebula-storaged:v3.1.0",
                        "imageID": "docker-pullable://vesoft/nebula-storaged@sha256:d74f9bc8f26597d5e0ab11a6c52a968a7801acbc6f14895cfa849bce7a2b8171",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://4d55195d319d2e846e3dd6095d36ac8d40f23240e6f74f94f32720e14794c60f",
                                "exitCode": 0,
                                "finishedAt": "2023-04-11T08:46:41Z",
                                "reason": "Completed",
                                "startedAt": "2023-04-10T03:52:49Z"
                            }
                        },
                        "name": "storaged",
                        "ready": true,
                        "restartCount": 3,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-04-11T08:48:29Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.49.2",
                "phase": "Running",
                "podIP": "172.17.0.3",
                "podIPs": [
                    {
                        "ip": "172.17.0.3"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2022-12-04T15:27:51Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2022-11-14T08:15:53Z",
                "generateName": "coredns-565d847f94-",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "565d847f94"
                },
                "name": "coredns-565d847f94-h2cs6",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "coredns-565d847f94",
                        "uid": "691cde40-1832-4fc0-b5c9-4816cab2c177"
                    }
                ],
                "resourceVersion": "21244145",
                "uid": "88cce509-9596-4f6b-97bf-5f1d28f761fb"
            },
            "spec": {
                "affinity": {
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                },
                                "weight": 100
                            }
                        ]
                    }
                },
                "containers": [
                    {
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "image": "registry.k8s.io/coredns/coredns:v1.9.3",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 5,
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "name": "coredns",
                        "ports": [
                            {
                                "containerPort": 53,
                                "name": "dns",
                                "protocol": "UDP"
                            },
                            {
                                "containerPort": 53,
                                "name": "dns-tcp",
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 9153,
                                "name": "metrics",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/ready",
                                "port": 8181,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "securityContext": {
                            "allowPrivilegeEscalation": false,
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/coredns",
                                "name": "config-volume",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-wvkp9",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "Default",
                "enableServiceLinks": true,
                "nodeName": "minikube",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 2000000000,
                "priorityClassName": "system-cluster-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "coredns",
                "serviceAccountName": "coredns",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/master"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node-role.kubernetes.io/control-plane"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "name": "coredns"
                        },
                        "name": "config-volume"
                    },
                    {
                        "name": "kube-api-access-wvkp9",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-14T08:15:53Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:48:22Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:48:22Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-14T08:15:53Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://d7910fedac2ffec7a2501d913641782374b5513ada1520667e84763b4f9f16e5",
                        "image": "registry.k8s.io/coredns/coredns:v1.9.3",
                        "imageID": "docker-pullable://registry.k8s.io/coredns/coredns@sha256:8e352a029d304ca7431c6507b56800636c321cb52289686a581ab70aaa8a2e2a",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://42bfe2e3fb990d743ef5d2d791d60dcae82d3dc9f85ef6fb29aa345ded8b80a2",
                                "exitCode": 0,
                                "finishedAt": "2023-04-11T08:47:39Z",
                                "reason": "Completed",
                                "startedAt": "2023-04-11T08:47:08Z"
                            }
                        },
                        "name": "coredns",
                        "ready": true,
                        "restartCount": 10,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-04-11T08:48:20Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.49.2",
                "phase": "Running",
                "podIP": "172.17.0.13",
                "podIPs": [
                    {
                        "ip": "172.17.0.13"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2022-11-14T08:15:53Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "kubeadm.kubernetes.io/etcd.advertise-client-urls": "https://192.168.49.2:2379",
                    "kubernetes.io/config.hash": "bd495b7643dfc9d3194bd002e968bc3d",
                    "kubernetes.io/config.mirror": "bd495b7643dfc9d3194bd002e968bc3d",
                    "kubernetes.io/config.seen": "2022-11-14T08:15:41.318339965Z",
                    "kubernetes.io/config.source": "file"
                },
                "creationTimestamp": "2022-11-14T08:15:42Z",
                "labels": {
                    "component": "etcd",
                    "tier": "control-plane"
                },
                "name": "etcd-minikube",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "controller": true,
                        "kind": "Node",
                        "name": "minikube",
                        "uid": "cb6b4151-1712-477a-8120-c09df58acad8"
                    }
                ],
                "resourceVersion": "21244096",
                "uid": "a34cb1de-7b6f-43e7-b1b9-ddd7edbd8b07"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "etcd",
                            "--advertise-client-urls=https://192.168.49.2:2379",
                            "--cert-file=/var/lib/minikube/certs/etcd/server.crt",
                            "--client-cert-auth=true",
                            "--data-dir=/var/lib/minikube/etcd",
                            "--experimental-initial-corrupt-check=true",
                            "--experimental-watch-progress-notify-interval=5s",
                            "--initial-advertise-peer-urls=https://192.168.49.2:2380",
                            "--initial-cluster=minikube=https://192.168.49.2:2380",
                            "--key-file=/var/lib/minikube/certs/etcd/server.key",
                            "--listen-client-urls=https://127.0.0.1:2379,https://192.168.49.2:2379",
                            "--listen-metrics-urls=http://127.0.0.1:2381",
                            "--listen-peer-urls=https://192.168.49.2:2380",
                            "--name=minikube",
                            "--peer-cert-file=/var/lib/minikube/certs/etcd/peer.crt",
                            "--peer-client-cert-auth=true",
                            "--peer-key-file=/var/lib/minikube/certs/etcd/peer.key",
                            "--peer-trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt",
                            "--proxy-refresh-interval=70000",
                            "--snapshot-count=10000",
                            "--trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt"
                        ],
                        "image": "registry.k8s.io/etcd:3.5.4-0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 8,
                            "httpGet": {
                                "host": "127.0.0.1",
                                "path": "/health?exclude=NOSPACE\u0026serializable=true",
                                "port": 2381,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 15
                        },
                        "name": "etcd",
                        "resources": {
                            "requests": {
                                "cpu": "100m",
                                "memory": "100Mi"
                            }
                        },
                        "startupProbe": {
                            "failureThreshold": 24,
                            "httpGet": {
                                "host": "127.0.0.1",
                                "path": "/health?serializable=false",
                                "port": 2381,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 15
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/minikube/etcd",
                                "name": "etcd-data"
                            },
                            {
                                "mountPath": "/var/lib/minikube/certs/etcd",
                                "name": "etcd-certs"
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "minikube",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 2000001000,
                "priorityClassName": "system-node-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/var/lib/minikube/certs/etcd",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "etcd-certs"
                    },
                    {
                        "hostPath": {
                            "path": "/var/lib/minikube/etcd",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "etcd-data"
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:47:47Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:48:04Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:48:04Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:47:47Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://850a8c1a28e0bff806d0468d89034f3e6ab5da1cf8d26e754f9828f60ec87e01",
                        "image": "registry.k8s.io/etcd:3.5.4-0",
                        "imageID": "docker-pullable://registry.k8s.io/etcd@sha256:6f72b851544986cb0921b53ea655ec04c36131248f16d4ad110cb3ca0c369dc1",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://d4ac5282e93b4cc7b2da7b6710ec5fc4a1360336fa47a485f3994f4dd3f48d78",
                                "exitCode": 0,
                                "finishedAt": "2023-04-11T08:47:35Z",
                                "reason": "Completed",
                                "startedAt": "2023-04-11T08:47:02Z"
                            }
                        },
                        "name": "etcd",
                        "ready": true,
                        "restartCount": 9,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-04-11T08:47:48Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.49.2",
                "phase": "Running",
                "podIP": "192.168.49.2",
                "podIPs": [
                    {
                        "ip": "192.168.49.2"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2023-04-11T08:47:47Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2022-11-14T08:19:42Z",
                "generateName": "hostpath-provisioner-5978dc8846-",
                "labels": {
                    "app.kubernetes.io/instance": "hostpath-provisioner",
                    "app.kubernetes.io/name": "hostpath-provisioner",
                    "pod-template-hash": "5978dc8846"
                },
                "name": "hostpath-provisioner-5978dc8846-tdjj2",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "hostpath-provisioner-5978dc8846",
                        "uid": "365c48b6-69bd-424e-950d-489cc586032a"
                    }
                ],
                "resourceVersion": "21244202",
                "uid": "0038598a-67b4-4b3a-861d-49bf851693b1"
            },
            "spec": {
                "containers": [
                    {
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "NODE_HOST_PATH",
                                "value": "/mnt/hostpath"
                            },
                            {
                                "name": "HOSTPATH_PROVISIONER_NAME",
                                "value": "hostpath"
                            }
                        ],
                        "image": "quay.io/rimusz/hostpath-provisioner:v0.2.5",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "hostpath-provisioner",
                        "resources": {
                            "limits": {
                                "cpu": "100m",
                                "memory": "128Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "128Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/mnt/hostpath",
                                "name": "pv-volume"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-kj4l7",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "minikube",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "hostpath-provisioner",
                "serviceAccountName": "hostpath-provisioner",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/mnt/hostpath",
                            "type": ""
                        },
                        "name": "pv-volume"
                    },
                    {
                        "name": "kube-api-access-kj4l7",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-14T08:19:43Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:48:20Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:48:20Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-14T08:19:42Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://43c98acda4171cd3387da9349d6064fe0438c2ac0df38c628cbdbf6bca6ae35f",
                        "image": "quay.io/rimusz/hostpath-provisioner:v0.2.5",
                        "imageID": "docker-pullable://quay.io/rimusz/hostpath-provisioner@sha256:87f0398ec7ffbbb91a3ac8e55cfaa4339b613154c009950e3ecbbb388a33b90e",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://0084544d13c3a62a841e26b6a15f86f0e87f019ce8b228d12572e27d18b2c4bc",
                                "exitCode": 2,
                                "finishedAt": "2023-04-11T08:47:35Z",
                                "reason": "Error",
                                "startedAt": "2023-04-11T08:47:14Z"
                            }
                        },
                        "name": "hostpath-provisioner",
                        "ready": true,
                        "restartCount": 9,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-04-11T08:48:17Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.49.2",
                "phase": "Running",
                "podIP": "172.17.0.5",
                "podIPs": [
                    {
                        "ip": "172.17.0.5"
                    }
                ],
                "qosClass": "Guaranteed",
                "startTime": "2022-11-14T08:19:43Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint": "192.168.49.2:8443",
                    "kubernetes.io/config.hash": "3300a782853778fd53e8261b53920c63",
                    "kubernetes.io/config.mirror": "3300a782853778fd53e8261b53920c63",
                    "kubernetes.io/config.seen": "2022-11-15T04:21:21.923411463Z",
                    "kubernetes.io/config.source": "file"
                },
                "creationTimestamp": "2022-11-15T04:21:53Z",
                "labels": {
                    "component": "kube-apiserver",
                    "tier": "control-plane"
                },
                "name": "kube-apiserver-minikube",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "controller": true,
                        "kind": "Node",
                        "name": "minikube",
                        "uid": "cb6b4151-1712-477a-8120-c09df58acad8"
                    }
                ],
                "resourceVersion": "21244119",
                "uid": "accb439f-dfeb-4e15-9eeb-acbbe164db8a"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "kube-apiserver",
                            "--advertise-address=192.168.49.2",
                            "--allow-privileged=true",
                            "--authorization-mode=Node,RBAC",
                            "--client-ca-file=/var/lib/minikube/certs/ca.crt",
                            "--enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota",
                            "--enable-bootstrap-token-auth=true",
                            "--etcd-cafile=/var/lib/minikube/certs/etcd/ca.crt",
                            "--etcd-certfile=/var/lib/minikube/certs/apiserver-etcd-client.crt",
                            "--etcd-keyfile=/var/lib/minikube/certs/apiserver-etcd-client.key",
                            "--etcd-servers=https://127.0.0.1:2379",
                            "--kubelet-client-certificate=/var/lib/minikube/certs/apiserver-kubelet-client.crt",
                            "--kubelet-client-key=/var/lib/minikube/certs/apiserver-kubelet-client.key",
                            "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
                            "--proxy-client-cert-file=/var/lib/minikube/certs/front-proxy-client.crt",
                            "--proxy-client-key-file=/var/lib/minikube/certs/front-proxy-client.key",
                            "--requestheader-allowed-names=front-proxy-client",
                            "--requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt",
                            "--requestheader-extra-headers-prefix=X-Remote-Extra-",
                            "--requestheader-group-headers=X-Remote-Group",
                            "--requestheader-username-headers=X-Remote-User",
                            "--secure-port=8443",
                            "--service-account-issuer=https://kubernetes.default.svc.cluster.local",
                            "--service-account-key-file=/var/lib/minikube/certs/sa.pub",
                            "--service-account-signing-key-file=/var/lib/minikube/certs/sa.key",
                            "--service-cluster-ip-range=10.96.0.0/12",
                            "--service-node-port-range=1-65535",
                            "--tls-cert-file=/var/lib/minikube/certs/apiserver.crt",
                            "--tls-private-key-file=/var/lib/minikube/certs/apiserver.key"
                        ],
                        "image": "registry.k8s.io/kube-apiserver:v1.25.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 8,
                            "httpGet": {
                                "host": "192.168.49.2",
                                "path": "/livez",
                                "port": 8443,
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 15
                        },
                        "name": "kube-apiserver",
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "host": "192.168.49.2",
                                "path": "/readyz",
                                "port": 8443,
                                "scheme": "HTTPS"
                            },
                            "periodSeconds": 1,
                            "successThreshold": 1,
                            "timeoutSeconds": 15
                        },
                        "resources": {
                            "requests": {
                                "cpu": "250m"
                            }
                        },
                        "startupProbe": {
                            "failureThreshold": 24,
                            "httpGet": {
                                "host": "192.168.49.2",
                                "path": "/livez",
                                "port": 8443,
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 15
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/ssl/certs",
                                "name": "ca-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/ca-certificates",
                                "name": "etc-ca-certificates",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/lib/minikube/certs",
                                "name": "k8s-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/usr/local/share/ca-certificates",
                                "name": "usr-local-share-ca-certificates",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/usr/share/ca-certificates",
                                "name": "usr-share-ca-certificates",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "minikube",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 2000001000,
                "priorityClassName": "system-node-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/etc/ssl/certs",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "ca-certs"
                    },
                    {
                        "hostPath": {
                            "path": "/etc/ca-certificates",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "etc-ca-certificates"
                    },
                    {
                        "hostPath": {
                            "path": "/var/lib/minikube/certs",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "k8s-certs"
                    },
                    {
                        "hostPath": {
                            "path": "/usr/local/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "usr-local-share-ca-certificates"
                    },
                    {
                        "hostPath": {
                            "path": "/usr/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "usr-share-ca-certificates"
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:47:47Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:48:06Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:48:06Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:47:47Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://8bba828137f04f89170e9cd2c81570127c8eb91a5bdbf58cc3e355cf2123d4f2",
                        "image": "registry.k8s.io/kube-apiserver:v1.25.0",
                        "imageID": "docker-pullable://registry.k8s.io/kube-apiserver@sha256:f6902791fb9aa6e283ed7d1d743417b3c425eec73151517813bef1539a66aefa",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://8aa387dd79451468adae540efeef5f57242ffae6cf26bfef06aaadea498ea786",
                                "exitCode": 1,
                                "finishedAt": "2023-04-11T08:47:39Z",
                                "reason": "Error",
                                "startedAt": "2023-04-11T08:47:01Z"
                            }
                        },
                        "name": "kube-apiserver",
                        "ready": true,
                        "restartCount": 8,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-04-11T08:47:48Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.49.2",
                "phase": "Running",
                "podIP": "192.168.49.2",
                "podIPs": [
                    {
                        "ip": "192.168.49.2"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2023-04-11T08:47:47Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "kubernetes.io/config.hash": "77bee6e3b99b4016b81d7d949c58a789",
                    "kubernetes.io/config.mirror": "77bee6e3b99b4016b81d7d949c58a789",
                    "kubernetes.io/config.seen": "2022-11-14T08:15:41.318374707Z",
                    "kubernetes.io/config.source": "file"
                },
                "creationTimestamp": "2022-11-14T08:15:42Z",
                "labels": {
                    "component": "kube-controller-manager",
                    "tier": "control-plane"
                },
                "name": "kube-controller-manager-minikube",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "controller": true,
                        "kind": "Node",
                        "name": "minikube",
                        "uid": "cb6b4151-1712-477a-8120-c09df58acad8"
                    }
                ],
                "resourceVersion": "21244040",
                "uid": "22f76708-63a7-4c8d-aa65-7cf09cf9d37f"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "kube-controller-manager",
                            "--allocate-node-cidrs=true",
                            "--authentication-kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--authorization-kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--bind-address=127.0.0.1",
                            "--client-ca-file=/var/lib/minikube/certs/ca.crt",
                            "--cluster-cidr=10.244.0.0/16",
                            "--cluster-name=mk",
                            "--cluster-signing-cert-file=/var/lib/minikube/certs/ca.crt",
                            "--cluster-signing-key-file=/var/lib/minikube/certs/ca.key",
                            "--controllers=*,bootstrapsigner,tokencleaner",
                            "--kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--leader-elect=false",
                            "--requestheader-client-ca-file=/var/lib/minikube/certs/front-proxy-ca.crt",
                            "--root-ca-file=/var/lib/minikube/certs/ca.crt",
                            "--service-account-private-key-file=/var/lib/minikube/certs/sa.key",
                            "--service-cluster-ip-range=10.96.0.0/12",
                            "--use-service-account-credentials=true"
                        ],
                        "image": "registry.k8s.io/kube-controller-manager:v1.25.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 8,
                            "httpGet": {
                                "host": "127.0.0.1",
                                "path": "/healthz",
                                "port": 10257,
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 15
                        },
                        "name": "kube-controller-manager",
                        "resources": {
                            "requests": {
                                "cpu": "200m"
                            }
                        },
                        "startupProbe": {
                            "failureThreshold": 24,
                            "httpGet": {
                                "host": "127.0.0.1",
                                "path": "/healthz",
                                "port": 10257,
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 15
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/ssl/certs",
                                "name": "ca-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/ca-certificates",
                                "name": "etc-ca-certificates",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec",
                                "name": "flexvolume-dir"
                            },
                            {
                                "mountPath": "/var/lib/minikube/certs",
                                "name": "k8s-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/kubernetes/controller-manager.conf",
                                "name": "kubeconfig",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/usr/local/share/ca-certificates",
                                "name": "usr-local-share-ca-certificates",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/usr/share/ca-certificates",
                                "name": "usr-share-ca-certificates",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "minikube",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 2000001000,
                "priorityClassName": "system-node-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/etc/ssl/certs",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "ca-certs"
                    },
                    {
                        "hostPath": {
                            "path": "/etc/ca-certificates",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "etc-ca-certificates"
                    },
                    {
                        "hostPath": {
                            "path": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "flexvolume-dir"
                    },
                    {
                        "hostPath": {
                            "path": "/var/lib/minikube/certs",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "k8s-certs"
                    },
                    {
                        "hostPath": {
                            "path": "/etc/kubernetes/controller-manager.conf",
                            "type": "FileOrCreate"
                        },
                        "name": "kubeconfig"
                    },
                    {
                        "hostPath": {
                            "path": "/usr/local/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "usr-local-share-ca-certificates"
                    },
                    {
                        "hostPath": {
                            "path": "/usr/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        },
                        "name": "usr-share-ca-certificates"
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-10T03:52:02Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-10T03:52:24Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-10T03:52:24Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-10T03:52:02Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://a18e56b3da2c749c07b7b4fc3bd5dbbd20a9f8dccda8e9db154fb40e534fe64d",
                        "image": "registry.k8s.io/kube-controller-manager:v1.25.0",
                        "imageID": "docker-pullable://registry.k8s.io/kube-controller-manager@sha256:66ce7d460e53f942bb4729f656d66fe475ec3d41728de986b6d790eee6d8205d",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://d4111bfe7188f7148e8e0c149ff73ef229d9e6239463d4bf65722f32342fec4f",
                                "exitCode": 2,
                                "finishedAt": "2023-04-11T08:47:35Z",
                                "reason": "Error",
                                "startedAt": "2023-04-11T08:47:05Z"
                            }
                        },
                        "name": "kube-controller-manager",
                        "ready": true,
                        "restartCount": 10,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-04-11T08:47:48Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.49.2",
                "phase": "Running",
                "podIP": "192.168.49.2",
                "podIPs": [
                    {
                        "ip": "192.168.49.2"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2023-04-10T03:52:02Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2022-11-14T08:15:53Z",
                "generateName": "kube-proxy-",
                "labels": {
                    "controller-revision-hash": "55c79b8759",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "name": "kube-proxy-7xscl",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "453b646f-9461-434d-9817-29282a308bab"
                    }
                ],
                "resourceVersion": "21244138",
                "uid": "7aac8652-b036-47d4-9149-28427fa37831"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "minikube"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "command": [
                            "/usr/local/bin/kube-proxy",
                            "--config=/var/lib/kube-proxy/config.conf",
                            "--hostname-override=$(NODE_NAME)"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "image": "registry.k8s.io/kube-proxy:v1.25.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "kube-proxy",
                        "resources": {},
                        "securityContext": {
                            "privileged": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/lib/kube-proxy",
                                "name": "kube-proxy"
                            },
                            {
                                "mountPath": "/run/xtables.lock",
                                "name": "xtables-lock"
                            },
                            {
                                "mountPath": "/lib/modules",
                                "name": "lib-modules",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-c9wgd",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "minikube",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 2000001000,
                "priorityClassName": "system-node-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "kube-proxy",
                "serviceAccountName": "kube-proxy",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "kube-proxy"
                        },
                        "name": "kube-proxy"
                    },
                    {
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        },
                        "name": "xtables-lock"
                    },
                    {
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        },
                        "name": "lib-modules"
                    },
                    {
                        "name": "kube-api-access-c9wgd",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-14T08:15:53Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:48:15Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:48:15Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-14T08:15:53Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://6040a39095174f858c8a2d09b8c93f41e302dddfd40c9fb6ee8b838493507c44",
                        "image": "registry.k8s.io/kube-proxy:v1.25.0",
                        "imageID": "docker-pullable://registry.k8s.io/kube-proxy@sha256:1b1f3456bb19866aa1655c607514b85cd2b6efdfea4d93ea55e79475ff2765f9",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://74a22f0e935d4bd37d2ea45e13ce6679ef2e245b8c0a6834d7158fcd5797de23",
                                "exitCode": 2,
                                "finishedAt": "2023-04-11T08:47:35Z",
                                "reason": "Error",
                                "startedAt": "2023-04-11T08:47:04Z"
                            }
                        },
                        "name": "kube-proxy",
                        "ready": true,
                        "restartCount": 10,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-04-11T08:48:13Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.49.2",
                "phase": "Running",
                "podIP": "192.168.49.2",
                "podIPs": [
                    {
                        "ip": "192.168.49.2"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2022-11-14T08:15:53Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "kubernetes.io/config.hash": "b564e2b429a630c74cbb01d3c4b7a228",
                    "kubernetes.io/config.mirror": "b564e2b429a630c74cbb01d3c4b7a228",
                    "kubernetes.io/config.seen": "2022-11-14T08:15:41.318376862Z",
                    "kubernetes.io/config.source": "file"
                },
                "creationTimestamp": "2022-11-14T08:15:42Z",
                "labels": {
                    "component": "kube-scheduler",
                    "tier": "control-plane"
                },
                "name": "kube-scheduler-minikube",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "controller": true,
                        "kind": "Node",
                        "name": "minikube",
                        "uid": "cb6b4151-1712-477a-8120-c09df58acad8"
                    }
                ],
                "resourceVersion": "21244171",
                "uid": "7d442e74-fb9d-4bf1-86df-cc79f657bebe"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "kube-scheduler",
                            "--authentication-kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--authorization-kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--bind-address=127.0.0.1",
                            "--kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--leader-elect=false"
                        ],
                        "image": "registry.k8s.io/kube-scheduler:v1.25.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 8,
                            "httpGet": {
                                "host": "127.0.0.1",
                                "path": "/healthz",
                                "port": 10259,
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 15
                        },
                        "name": "kube-scheduler",
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "startupProbe": {
                            "failureThreshold": 24,
                            "httpGet": {
                                "host": "127.0.0.1",
                                "path": "/healthz",
                                "port": 10259,
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 15
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/kubernetes/scheduler.conf",
                                "name": "kubeconfig",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "minikube",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 2000001000,
                "priorityClassName": "system-node-critical",
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/etc/kubernetes/scheduler.conf",
                            "type": "FileOrCreate"
                        },
                        "name": "kubeconfig"
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-21T03:04:46Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:48:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:48:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-21T03:04:46Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://8cdcd0622ddc02a65429da4b828391ac48c991d5391396adb594df1109b625aa",
                        "image": "registry.k8s.io/kube-scheduler:v1.25.0",
                        "imageID": "docker-pullable://registry.k8s.io/kube-scheduler@sha256:9330c53feca7b51b25e427fa96afd5d1460b3233e9fa92e20c895c067da56ac1",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://4a8027694a687701826423d818d129567bfdbf9f3f9c39e3a1ebf049560dc7ff",
                                "exitCode": 1,
                                "finishedAt": "2023-04-11T08:47:35Z",
                                "reason": "Error",
                                "startedAt": "2023-04-11T08:47:00Z"
                            }
                        },
                        "name": "kube-scheduler",
                        "ready": true,
                        "restartCount": 9,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-04-11T08:47:48Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.49.2",
                "phase": "Running",
                "podIP": "192.168.49.2",
                "podIPs": [
                    {
                        "ip": "192.168.49.2"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2022-11-21T03:04:46Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Pod\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"integration-test\":\"storage-provisioner\"},\"name\":\"storage-provisioner\",\"namespace\":\"kube-system\"},\"spec\":{\"containers\":[{\"command\":[\"/storage-provisioner\"],\"image\":\"gcr.io/k8s-minikube/storage-provisioner:v5\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"storage-provisioner\",\"volumeMounts\":[{\"mountPath\":\"/tmp\",\"name\":\"tmp\"}]}],\"hostNetwork\":true,\"serviceAccountName\":\"storage-provisioner\",\"volumes\":[{\"hostPath\":{\"path\":\"/tmp\",\"type\":\"Directory\"},\"name\":\"tmp\"}]}}\n"
                },
                "creationTimestamp": "2022-11-14T08:15:46Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "integration-test": "storage-provisioner"
                },
                "name": "storage-provisioner",
                "namespace": "kube-system",
                "resourceVersion": "21244160",
                "uid": "5e8bed9b-a9c4-4e4a-b96a-c8581fb4c987"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "/storage-provisioner"
                        ],
                        "image": "gcr.io/k8s-minikube/storage-provisioner:v5",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "storage-provisioner",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/tmp",
                                "name": "tmp"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-hzrcw",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "nodeName": "minikube",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "storage-provisioner",
                "serviceAccountName": "storage-provisioner",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/tmp",
                            "type": "Directory"
                        },
                        "name": "tmp"
                    },
                    {
                        "name": "kube-api-access-hzrcw",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-14T08:15:52Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:48:22Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:48:22Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-14T08:15:52Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://cb7c41f92772f6b9392507247712944744f9a6df7e10209b4377022259164bb5",
                        "image": "gcr.io/k8s-minikube/storage-provisioner:v5",
                        "imageID": "docker-pullable://gcr.io/k8s-minikube/storage-provisioner@sha256:18eb69d1418e854ad5a19e399310e52808a8321e4c441c1dddad8977a0d7a944",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://31d37e564e992552c15ef3bbc02eac98793b5ef34de8a354274d87ce1220e2c6",
                                "exitCode": 128,
                                "finishedAt": "2023-04-11T08:47:35Z",
                                "message": "cannot join network of a non running container: 0a1d07a57c1edddb106a90b0235ddce04a057ac1073f2819f8b260b4f5fbc5cd",
                                "reason": "ContainerCannotRun",
                                "startedAt": "2023-04-11T08:47:35Z"
                            }
                        },
                        "name": "storage-provisioner",
                        "ready": true,
                        "restartCount": 18,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-04-11T08:48:19Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.49.2",
                "phase": "Running",
                "podIP": "192.168.49.2",
                "podIPs": [
                    {
                        "ip": "192.168.49.2"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2022-11-14T08:15:52Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "prometheus.io/path": "/",
                    "prometheus.io/port": "8000",
                    "prometheus.io/scrape": "true"
                },
                "creationTimestamp": "2023-04-11T08:06:04Z",
                "generateName": "kube-ebpf-",
                "labels": {
                    "controller-revision-hash": "56cfc78c4f",
                    "name": "kube-ebpf",
                    "pod-template-generation": "1"
                },
                "name": "kube-ebpf-zktlb",
                "namespace": "monitoring",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "DaemonSet",
                        "name": "kube-ebpf",
                        "uid": "befe3348-8589-4ca8-8379-94d1f411800a"
                    }
                ],
                "resourceVersion": "21253463",
                "uid": "6d49485a-d9d7-41f7-8bf5-e7d822394f85"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "minikube"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "PYTHONUNBUFFERED",
                                "value": "1"
                            }
                        ],
                        "image": "ghcr.io/mrsupiri/kube-ebpf:latest",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "kube-ebpf",
                        "ports": [
                            {
                                "containerPort": 8000,
                                "hostPort": 8000,
                                "name": "metrics",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "requests": {
                                "ephemeral-storage": "2Gi"
                            }
                        },
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "SYS_ADMIN"
                                ]
                            },
                            "privileged": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/lib/modules",
                                "name": "modules-dir"
                            },
                            {
                                "mountPath": "/usr/src/",
                                "name": "linux-headers-generated"
                            },
                            {
                                "mountPath": "/sys/kernel/debug",
                                "name": "debug"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-269zw",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "hostNetwork": true,
                "hostPID": true,
                "initContainers": [
                    {
                        "image": "ghcr.io/mrsupiri/kube-ebpf/init-headers:latest",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "init-headers",
                        "resources": {},
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "SYS_ADMIN"
                                ]
                            },
                            "privileged": true
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/lsb-release.host",
                                "name": "lsb-release"
                            },
                            {
                                "mountPath": "/etc/os-release.host",
                                "name": "os-release"
                            },
                            {
                                "mountPath": "/lib/modules",
                                "name": "modules-dir"
                            },
                            {
                                "mountPath": "/lib/modules.host",
                                "name": "modules-host"
                            },
                            {
                                "mountPath": "/usr/src/",
                                "name": "linux-headers-generated"
                            },
                            {
                                "mountPath": "/boot.host",
                                "name": "boot-host"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-269zw",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "nodeName": "minikube",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "kube-ebpf",
                "serviceAccountName": "kube-ebpf",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists"
                    },
                    {
                        "effect": "NoSchedule",
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists"
                    }
                ],
                "volumes": [
                    {
                        "hostPath": {
                            "path": "/etc/lsb-release",
                            "type": ""
                        },
                        "name": "lsb-release"
                    },
                    {
                        "hostPath": {
                            "path": "/etc/os-release",
                            "type": ""
                        },
                        "name": "os-release"
                    },
                    {
                        "hostPath": {
                            "path": "/var/cache/linux-headers/modules_dir",
                            "type": ""
                        },
                        "name": "modules-dir"
                    },
                    {
                        "hostPath": {
                            "path": "/var/cache/linux-headers/generated",
                            "type": ""
                        },
                        "name": "linux-headers-generated"
                    },
                    {
                        "hostPath": {
                            "path": "/",
                            "type": ""
                        },
                        "name": "boot-host"
                    },
                    {
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        },
                        "name": "modules-host"
                    },
                    {
                        "hostPath": {
                            "path": "/sys/kernel/debug",
                            "type": ""
                        },
                        "name": "debug"
                    },
                    {
                        "name": "kube-api-access-269zw",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:09:13Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T09:43:42Z",
                        "message": "containers with unready status: [kube-ebpf]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T09:43:42Z",
                        "message": "containers with unready status: [kube-ebpf]",
                        "reason": "ContainersNotReady",
                        "status": "False",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:06:04Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://2039051fc7257499dba03314208e14190cc7d46394bbd465b5fe8babe2e279fe",
                        "image": "ghcr.io/mrsupiri/kube-ebpf:latest",
                        "imageID": "docker-pullable://ghcr.io/mrsupiri/kube-ebpf@sha256:b7ca409814bb6c73296fab6eba840c64f6476812b74a87192e7714f028412048",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://2039051fc7257499dba03314208e14190cc7d46394bbd465b5fe8babe2e279fe",
                                "exitCode": 1,
                                "finishedAt": "2023-04-11T09:43:41Z",
                                "reason": "Error",
                                "startedAt": "2023-04-11T09:43:39Z"
                            }
                        },
                        "name": "kube-ebpf",
                        "ready": false,
                        "restartCount": 27,
                        "started": false,
                        "state": {
                            "waiting": {
                                "message": "back-off 5m0s restarting failed container=kube-ebpf pod=kube-ebpf-zktlb_monitoring(6d49485a-d9d7-41f7-8bf5-e7d822394f85)",
                                "reason": "CrashLoopBackOff"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.49.2",
                "initContainerStatuses": [
                    {
                        "containerID": "docker://970c012dd683090df5fac0d72f385cefb5d98e10fd1732fc872b2785656490c0",
                        "image": "ghcr.io/mrsupiri/kube-ebpf/init-headers:latest",
                        "imageID": "docker-pullable://ghcr.io/mrsupiri/kube-ebpf/init-headers@sha256:043d94c462e03500cf67c45b78d47800793b80db4805107c30c32dd55e8bcf37",
                        "lastState": {},
                        "name": "init-headers",
                        "ready": true,
                        "restartCount": 1,
                        "state": {
                            "terminated": {
                                "containerID": "docker://970c012dd683090df5fac0d72f385cefb5d98e10fd1732fc872b2785656490c0",
                                "exitCode": 0,
                                "finishedAt": "2023-04-11T08:47:14Z",
                                "reason": "Completed",
                                "startedAt": "2023-04-11T08:47:14Z"
                            }
                        }
                    }
                ],
                "phase": "Running",
                "podIP": "192.168.49.2",
                "podIPs": [
                    {
                        "ip": "192.168.49.2"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-04-11T08:06:04Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2023-04-11T08:07:00Z",
                "generateName": "prometheus-6ff6f6b54-",
                "labels": {
                    "app": "prometheus",
                    "pod-template-hash": "6ff6f6b54"
                },
                "name": "prometheus-6ff6f6b54-hb259",
                "namespace": "monitoring",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "prometheus-6ff6f6b54",
                        "uid": "e10544dd-6f4d-46ec-b44a-97b4b8ce3ed6"
                    }
                ],
                "resourceVersion": "21244009",
                "uid": "11743f67-a609-418c-ba4c-13798fb83daa"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--config.file=/etc/prometheus/prometheus.yml"
                        ],
                        "image": "prom/prometheus:v2.33.1",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "prometheus",
                        "ports": [
                            {
                                "containerPort": 9090,
                                "name": "default",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/prometheus",
                                "name": "config-volume"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-2npfr",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "minikube",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "fsGroup": 65534,
                    "runAsGroup": 65534,
                    "runAsNonRoot": true,
                    "runAsUser": 65534
                },
                "serviceAccount": "prometheus",
                "serviceAccountName": "prometheus",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "prometheus-config"
                        },
                        "name": "config-volume"
                    },
                    {
                        "name": "kube-api-access-2npfr",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:07:01Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:08:23Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:08:23Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:07:01Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://ba32a7d624ea4645d630f280fd6ebdfcd7397842a0dd029916fb77d0a25c3b8f",
                        "image": "prom/prometheus:v2.33.1",
                        "imageID": "docker-pullable://prom/prometheus@sha256:3a75763d209af6ef82aca8fb202a76092a690d25f24d2def7f4eff64e79b7ed9",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://40f8594c0e21361c6b6dc5100b20d0edce4ee07fc2c1dd07d9566985a9f261d9",
                                "exitCode": 0,
                                "finishedAt": "2023-04-11T08:46:38Z",
                                "reason": "Completed",
                                "startedAt": "2023-04-11T08:08:23Z"
                            }
                        },
                        "name": "prometheus",
                        "ready": true,
                        "restartCount": 1,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-04-11T08:47:15Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.49.2",
                "phase": "Running",
                "podIP": "172.17.0.15",
                "podIPs": [
                    {
                        "ip": "172.17.0.15"
                    }
                ],
                "qosClass": "BestEffort",
                "startTime": "2023-04-11T08:07:01Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2022-11-14T09:43:40Z",
                "generateName": "nebula-operator-controller-manager-deployment-86749f78c8-",
                "labels": {
                    "app.kubernetes.io/component": "controller-manager",
                    "app.kubernetes.io/instance": "nebula-operator",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "nebula-operator",
                    "app.kubernetes.io/version": "1.0.0",
                    "helm.sh/chart": "nebula-operator-1.2.0",
                    "pod-template-hash": "86749f78c8"
                },
                "name": "nebula-operator-controller-manager-deployment-86749f78c8-9j865",
                "namespace": "nebula-operator-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "nebula-operator-controller-manager-deployment-86749f78c8",
                        "uid": "a5348c19-bfa6-4d1d-bd39-434af33c5154"
                    }
                ],
                "resourceVersion": "21244120",
                "uid": "ad7b0c99-1e84-4028-8a46-0ed506878034"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--health-probe-bind-address=:8081",
                            "--metrics-bind-address=:8080",
                            "--enable-kruise=false",
                            "--max-concurrent-reconciles=3",
                            "--enable-leader-election",
                            "--leader-election-namespace=nebula-operator-system",
                            "--admission-webhook=true"
                        ],
                        "command": [
                            "/usr/local/bin/controller-manager"
                        ],
                        "image": "vesoft/nebula-operator:v1.2.0",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 8081,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 15,
                            "periodSeconds": 20,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "controller-manager",
                        "ports": [
                            {
                                "containerPort": 9443,
                                "name": "webhook-server",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readyz",
                                "port": 8081,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "200m",
                                "memory": "200Mi"
                            },
                            "requests": {
                                "cpu": "1m",
                                "memory": "100Mi"
                            }
                        },
                        "securityContext": {
                            "allowPrivilegeEscalation": false
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/tmp/k8s-webhook-server/serving-certs",
                                "name": "cert",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-qjlzt",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "--secure-listen-address=0.0.0.0:8443",
                            "--upstream=http://127.0.0.1:8080/",
                            "--logtostderr=true",
                            "--v=2"
                        ],
                        "image": "gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0",
                        "imagePullPolicy": "Always",
                        "name": "kube-rbac-proxy",
                        "ports": [
                            {
                                "containerPort": 8443,
                                "name": "https",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "100m",
                                "memory": "30Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "20Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-qjlzt",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "minikube",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "runAsNonRoot": true
                },
                "serviceAccount": "nebula-operator-controller-manager-sa",
                "serviceAccountName": "nebula-operator-controller-manager-sa",
                "terminationGracePeriodSeconds": 10,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "cert",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "nebula-operator-webhook-secret"
                        }
                    },
                    {
                        "name": "kube-api-access-qjlzt",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-14T09:43:41Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:48:33Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:48:33Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-14T09:43:41Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://a2cfed06e1ed21c58350c62a03c15af61c4c0735e3bc6bcea4509092810c1a14",
                        "image": "vesoft/nebula-operator:v1.2.0",
                        "imageID": "docker-pullable://vesoft/nebula-operator@sha256:13ee3798aa47214fafd8569294952f424837ca0ffea95b64039f09b7d311e891",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://b3b26bfefd164e60c61c049e88f6aa9976ea13afd7699070c8d657d98f509f28",
                                "exitCode": 1,
                                "finishedAt": "2023-04-11T08:47:41Z",
                                "reason": "Error",
                                "startedAt": "2023-04-11T08:47:40Z"
                            }
                        },
                        "name": "controller-manager",
                        "ready": true,
                        "restartCount": 9,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-04-11T08:48:20Z"
                            }
                        }
                    },
                    {
                        "containerID": "docker://16efc1b1694893e5aa5b0390fd62d70bc4134dca9e38fbd00fc5628f83339bfe",
                        "image": "gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0",
                        "imageID": "docker-pullable://gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://e5247b25e3a76e5ba825de744ee23e7c1607dd9dc41d46938b514883d6fd44c0",
                                "exitCode": 0,
                                "finishedAt": "2023-04-11T08:46:38Z",
                                "reason": "Completed",
                                "startedAt": "2023-04-10T03:53:11Z"
                            }
                        },
                        "name": "kube-rbac-proxy",
                        "ready": true,
                        "restartCount": 6,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-04-11T08:48:31Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.49.2",
                "phase": "Running",
                "podIP": "172.17.0.14",
                "podIPs": [
                    {
                        "ip": "172.17.0.14"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2022-11-14T09:43:41Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "creationTimestamp": "2022-11-14T09:43:41Z",
                "generateName": "nebula-operator-controller-manager-deployment-86749f78c8-",
                "labels": {
                    "app.kubernetes.io/component": "controller-manager",
                    "app.kubernetes.io/instance": "nebula-operator",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "nebula-operator",
                    "app.kubernetes.io/version": "1.0.0",
                    "helm.sh/chart": "nebula-operator-1.2.0",
                    "pod-template-hash": "86749f78c8"
                },
                "name": "nebula-operator-controller-manager-deployment-86749f78c8-r4xbv",
                "namespace": "nebula-operator-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "nebula-operator-controller-manager-deployment-86749f78c8",
                        "uid": "a5348c19-bfa6-4d1d-bd39-434af33c5154"
                    }
                ],
                "resourceVersion": "21244174",
                "uid": "6a497d2c-4610-4554-aea1-29ed167e5505"
            },
            "spec": {
                "containers": [
                    {
                        "args": [
                            "--health-probe-bind-address=:8081",
                            "--metrics-bind-address=:8080",
                            "--enable-kruise=false",
                            "--max-concurrent-reconciles=3",
                            "--enable-leader-election",
                            "--leader-election-namespace=nebula-operator-system",
                            "--admission-webhook=true"
                        ],
                        "command": [
                            "/usr/local/bin/controller-manager"
                        ],
                        "image": "vesoft/nebula-operator:v1.2.0",
                        "imagePullPolicy": "Always",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/healthz",
                                "port": 8081,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 15,
                            "periodSeconds": 20,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "controller-manager",
                        "ports": [
                            {
                                "containerPort": 9443,
                                "name": "webhook-server",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/readyz",
                                "port": 8081,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "200m",
                                "memory": "200Mi"
                            },
                            "requests": {
                                "cpu": "1m",
                                "memory": "100Mi"
                            }
                        },
                        "securityContext": {
                            "allowPrivilegeEscalation": false
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/tmp/k8s-webhook-server/serving-certs",
                                "name": "cert",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-l2r4j",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "--secure-listen-address=0.0.0.0:8443",
                            "--upstream=http://127.0.0.1:8080/",
                            "--logtostderr=true",
                            "--v=2"
                        ],
                        "image": "gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0",
                        "imagePullPolicy": "Always",
                        "name": "kube-rbac-proxy",
                        "ports": [
                            {
                                "containerPort": 8443,
                                "name": "https",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "100m",
                                "memory": "30Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "20Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kube-api-access-l2r4j",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "minikube",
                "preemptionPolicy": "PreemptLowerPriority",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "runAsNonRoot": true
                },
                "serviceAccount": "nebula-operator-controller-manager-sa",
                "serviceAccountName": "nebula-operator-controller-manager-sa",
                "terminationGracePeriodSeconds": 10,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "cert",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "nebula-operator-webhook-secret"
                        }
                    },
                    {
                        "name": "kube-api-access-l2r4j",
                        "projected": {
                            "defaultMode": 420,
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt"
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                },
                                                "path": "namespace"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-14T09:43:41Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:48:29Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-04-11T08:48:29Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-14T09:43:41Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://998221eb9d4610bb005932aea867d9c68accfc9e84d6a650aa2eb15a160880e8",
                        "image": "vesoft/nebula-operator:v1.2.0",
                        "imageID": "docker-pullable://vesoft/nebula-operator@sha256:13ee3798aa47214fafd8569294952f424837ca0ffea95b64039f09b7d311e891",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://86d395a8a9e895e2f690e2e91ec03d2e0a653e188375ab8c032562f43594e576",
                                "exitCode": 0,
                                "finishedAt": "2023-04-11T08:46:38Z",
                                "reason": "Completed",
                                "startedAt": "2023-04-10T03:53:07Z"
                            }
                        },
                        "name": "controller-manager",
                        "ready": true,
                        "restartCount": 6,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-04-11T08:48:09Z"
                            }
                        }
                    },
                    {
                        "containerID": "docker://0184b12fc7c13ab5867a16bf07e71f2fdafdc788fd61fffa2ff2161c1429ba76",
                        "image": "gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0",
                        "imageID": "docker-pullable://gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://87d53b9086015b9c67d78017e1cbf042fed210eef42f49ea355893081235df6f",
                                "exitCode": 0,
                                "finishedAt": "2023-04-11T08:46:38Z",
                                "reason": "Completed",
                                "startedAt": "2023-04-10T03:53:24Z"
                            }
                        },
                        "name": "kube-rbac-proxy",
                        "ready": true,
                        "restartCount": 6,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2023-04-11T08:48:26Z"
                            }
                        }
                    }
                ],
                "hostIP": "192.168.49.2",
                "phase": "Running",
                "podIP": "172.17.0.17",
                "podIPs": [
                    {
                        "ip": "172.17.0.17"
                    }
                ],
                "qosClass": "Burstable",
                "startTime": "2022-11-14T09:43:41Z"
            }
        }
    ],
    "kind": "List",
    "metadata": {
        "resourceVersion": ""
    }
}
